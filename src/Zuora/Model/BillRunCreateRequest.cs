/*
 * Quickstart API Reference
 *
 * Zuora Quickstart API is recommended for new customers and integrators, allowing new integrators to swiftly integrate with Zuora. It supports essential business use cases.   To use the Quickstart API, you must have the following features enabled on your tenant:   * [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization)  * [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement)  To find the latest changes made to the Zuora Quickstart API, check the [Quickstart API Changelog](https://www.zuora.com/developer/quickstart-api/changelog/2022q4-changelog/).  We recommend that you subscribe to [Developers Community](https://community.zuora.com/communities/community-home?communitykey=e2a932b4-50c4-4019-a3e8-362e38714df3) to get notifications when a new version is released.  
 *
 * The version of the OpenAPI document: 2023-09-25
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Zuora.Client.OpenAPIDateConverter;

namespace Zuora.Model
{
    /// <summary>
    /// BillRunCreateRequest
    /// </summary>
    [DataContract]
    public partial class BillRunCreateRequest :  IEquatable<BillRunCreateRequest>, IValidatableObject
    {
        /// <summary>
        /// The day of the month on which the multiple customer accounts are billed.
        /// </summary>
        /// <value>The day of the month on which the multiple customer accounts are billed.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum DayOfMonthEnum
        {
            /// <summary>
            /// Enum _1 for value: 1
            /// </summary>
            [EnumMember(Value = "1")]
            _1 = 1,

            /// <summary>
            /// Enum _2 for value: 2
            /// </summary>
            [EnumMember(Value = "2")]
            _2 = 2,

            /// <summary>
            /// Enum _3 for value: 3
            /// </summary>
            [EnumMember(Value = "3")]
            _3 = 3,

            /// <summary>
            /// Enum _4 for value: 4
            /// </summary>
            [EnumMember(Value = "4")]
            _4 = 4,

            /// <summary>
            /// Enum _5 for value: 5
            /// </summary>
            [EnumMember(Value = "5")]
            _5 = 5,

            /// <summary>
            /// Enum _6 for value: 6
            /// </summary>
            [EnumMember(Value = "6")]
            _6 = 6,

            /// <summary>
            /// Enum _7 for value: 7
            /// </summary>
            [EnumMember(Value = "7")]
            _7 = 7,

            /// <summary>
            /// Enum _8 for value: 8
            /// </summary>
            [EnumMember(Value = "8")]
            _8 = 8,

            /// <summary>
            /// Enum _9 for value: 9
            /// </summary>
            [EnumMember(Value = "9")]
            _9 = 9,

            /// <summary>
            /// Enum _10 for value: 10
            /// </summary>
            [EnumMember(Value = "10")]
            _10 = 10,

            /// <summary>
            /// Enum _11 for value: 11
            /// </summary>
            [EnumMember(Value = "11")]
            _11 = 11,

            /// <summary>
            /// Enum _12 for value: 12
            /// </summary>
            [EnumMember(Value = "12")]
            _12 = 12,

            /// <summary>
            /// Enum _13 for value: 13
            /// </summary>
            [EnumMember(Value = "13")]
            _13 = 13,

            /// <summary>
            /// Enum _14 for value: 14
            /// </summary>
            [EnumMember(Value = "14")]
            _14 = 14,

            /// <summary>
            /// Enum _15 for value: 15
            /// </summary>
            [EnumMember(Value = "15")]
            _15 = 15,

            /// <summary>
            /// Enum _16 for value: 16
            /// </summary>
            [EnumMember(Value = "16")]
            _16 = 16,

            /// <summary>
            /// Enum _17 for value: 17
            /// </summary>
            [EnumMember(Value = "17")]
            _17 = 17,

            /// <summary>
            /// Enum _18 for value: 18
            /// </summary>
            [EnumMember(Value = "18")]
            _18 = 18,

            /// <summary>
            /// Enum _19 for value: 19
            /// </summary>
            [EnumMember(Value = "19")]
            _19 = 19,

            /// <summary>
            /// Enum _20 for value: 20
            /// </summary>
            [EnumMember(Value = "20")]
            _20 = 20,

            /// <summary>
            /// Enum _21 for value: 21
            /// </summary>
            [EnumMember(Value = "21")]
            _21 = 21,

            /// <summary>
            /// Enum _22 for value: 22
            /// </summary>
            [EnumMember(Value = "22")]
            _22 = 22,

            /// <summary>
            /// Enum _23 for value: 23
            /// </summary>
            [EnumMember(Value = "23")]
            _23 = 23,

            /// <summary>
            /// Enum _24 for value: 24
            /// </summary>
            [EnumMember(Value = "24")]
            _24 = 24,

            /// <summary>
            /// Enum _25 for value: 25
            /// </summary>
            [EnumMember(Value = "25")]
            _25 = 25,

            /// <summary>
            /// Enum _26 for value: 26
            /// </summary>
            [EnumMember(Value = "26")]
            _26 = 26,

            /// <summary>
            /// Enum _27 for value: 27
            /// </summary>
            [EnumMember(Value = "27")]
            _27 = 27,

            /// <summary>
            /// Enum _28 for value: 28
            /// </summary>
            [EnumMember(Value = "28")]
            _28 = 28,

            /// <summary>
            /// Enum _29 for value: 29
            /// </summary>
            [EnumMember(Value = "29")]
            _29 = 29,

            /// <summary>
            /// Enum _30 for value: 30
            /// </summary>
            [EnumMember(Value = "30")]
            _30 = 30,

            /// <summary>
            /// Enum _31 for value: 31
            /// </summary>
            [EnumMember(Value = "31")]
            _31 = 31,

            /// <summary>
            /// Enum AllBillCycleDays for value: AllBillCycleDays
            /// </summary>
            [EnumMember(Value = "AllBillCycleDays")]
            AllBillCycleDays = 32,

            /// <summary>
            /// Enum AsRunDay for value: AsRunDay
            /// </summary>
            [EnumMember(Value = "AsRunDay")]
            AsRunDay = 33

        }

        /// <summary>
        /// The day of the month on which the multiple customer accounts are billed.
        /// </summary>
        /// <value>The day of the month on which the multiple customer accounts are billed.</value>
        [DataMember(Name="day_of_month", EmitDefaultValue=false)]
        public DayOfMonthEnum? day_of_month { get; set; }
        /// <summary>
        /// The type of the bill run. This field is only available if you have the &lt;a href&#x3D;\&quot;https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Automate_billing_document_generation/Bill_runs/Z_Catch-Up_Bill_Run\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Catch-Up Bill Run&lt;/a&gt; feature enabled in your tenant.
        /// </summary>
        /// <value>The type of the bill run. This field is only available if you have the &lt;a href&#x3D;\&quot;https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Automate_billing_document_generation/Bill_runs/Z_Catch-Up_Bill_Run\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Catch-Up Bill Run&lt;/a&gt; feature enabled in your tenant.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TypeEnum
        {
            /// <summary>
            /// Enum Regular for value: regular
            /// </summary>
            [EnumMember(Value = "regular")]
            Regular = 1,

            /// <summary>
            /// Enum Catchup for value: catch_up
            /// </summary>
            [EnumMember(Value = "catch_up")]
            Catchup = 2

        }

        /// <summary>
        /// The type of the bill run. This field is only available if you have the &lt;a href&#x3D;\&quot;https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Automate_billing_document_generation/Bill_runs/Z_Catch-Up_Bill_Run\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Catch-Up Bill Run&lt;/a&gt; feature enabled in your tenant.
        /// </summary>
        /// <value>The type of the bill run. This field is only available if you have the &lt;a href&#x3D;\&quot;https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Automate_billing_document_generation/Bill_runs/Z_Catch-Up_Bill_Run\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Catch-Up Bill Run&lt;/a&gt; feature enabled in your tenant.</value>
        [DataMember(Name="type", EmitDefaultValue=false)]
        public TypeEnum? type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="BillRunCreateRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected BillRunCreateRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="BillRunCreateRequest" /> class.
        /// </summary>
        /// <param name="customFields">Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format..</param>
        /// <param name="accountId">Identifier of the customer account to bill. Specify this field or &#x60;account_number&#x60; if you want to create a bill run for a single customer..</param>
        /// <param name="accountNumber">Human-readable identifier of the account to bill. Specify this field or &#x60;account_id&#x60; if you want to create a bill run for a single customer..</param>
        /// <param name="email">If set to &#x60;true&#x60;, invoices will be automatically emailed to customers..</param>
        /// <param name="post">Indicates whether to automatically post a billing document after it is created..</param>
        /// <param name="renew">If set to &#x60;true&#x60;, subscriptions will be automatically renewed..</param>
        /// <param name="dayOfMonth">The day of the month on which the multiple customer accounts are billed..</param>
        /// <param name="batches">Identifier of the customer account batch to be included in this bill run..</param>
        /// <param name="invoiceDate">The date displayed on the invoice. (required).</param>
        /// <param name="targetDate">All unbilled items on or before this date are included in this bill run. (required).</param>
        /// <param name="emailZeroAmountInvoices">If it is set to &#x60;false&#x60;, invoices for zero amounts will not be emailed to customers.  (default to true).</param>
        /// <param name="chargesExcluded">Type of the charge to be excluded from the bill run..</param>
        /// <param name="name">The name of the bill run..</param>
        /// <param name="type">The type of the bill run. This field is only available if you have the &lt;a href&#x3D;\&quot;https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Automate_billing_document_generation/Bill_runs/Z_Catch-Up_Bill_Run\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Catch-Up Bill Run&lt;/a&gt; feature enabled in your tenant..</param>
        /// <param name="subscriptionIds">The target subscriptions for this bill run. Note that all these subscriptions must belong to the same account..</param>
        public BillRunCreateRequest(Dictionary<string, Object> customFields = default(Dictionary<string, Object>), string accountId = default(string), string accountNumber = default(string), bool email = default(bool), bool post = default(bool), bool renew = default(bool), DayOfMonthEnum? dayOfMonth = default(DayOfMonthEnum?), List<string> batches = default(List<string>), DateTime invoiceDate = default(DateTime), DateTime targetDate = default(DateTime), bool emailZeroAmountInvoices = true, List<string> chargesExcluded = default(List<string>), string name = default(string), TypeEnum? type = default(TypeEnum?), List<string> subscriptionIds = default(List<string>))
        {
            // to ensure "invoiceDate" is required (not null)
            if (invoiceDate == null)
            {
                throw new InvalidDataException("invoiceDate is a required property for BillRunCreateRequest and cannot be null");
            }
            else
            {
                this.invoice_date = invoiceDate;
            }

            // to ensure "targetDate" is required (not null)
            if (targetDate == null)
            {
                throw new InvalidDataException("targetDate is a required property for BillRunCreateRequest and cannot be null");
            }
            else
            {
                this.target_date = targetDate;
            }

            this.custom_fields = customFields;
            this.account_id = accountId;
            this.account_number = accountNumber;
            this.email = email;
            this.post = post;
            this.renew = renew;
            this.day_of_month = dayOfMonth;
            this.batches = batches;
            // use default value if no "emailZeroAmountInvoices" provided
            if (emailZeroAmountInvoices == null)
            {
                this.email_zero_amount_invoices = true;
            }
            else
            {
                this.email_zero_amount_invoices = emailZeroAmountInvoices;
            }
            this.charges_excluded = chargesExcluded;
            this.name = name;
            this.type = type;
            this.subscription_ids = subscriptionIds;
        }

        /// <summary>
        /// Unique identifier for the object.
        /// </summary>
        /// <value>Unique identifier for the object.</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string id { get; private set; }

        /// <summary>
        /// Unique identifier of the Zuora user who last updated the object
        /// </summary>
        /// <value>Unique identifier of the Zuora user who last updated the object</value>
        [DataMember(Name="updated_by_id", EmitDefaultValue=false)]
        public string updated_by_id { get; private set; }

        /// <summary>
        /// The date and time when the object was last updated in ISO 8601 UTC format.
        /// </summary>
        /// <value>The date and time when the object was last updated in ISO 8601 UTC format.</value>
        [DataMember(Name="updated_time", EmitDefaultValue=false)]
        public DateTime updated_time { get; private set; }

        /// <summary>
        /// Unique identifier of the Zuora user who created the object
        /// </summary>
        /// <value>Unique identifier of the Zuora user who created the object</value>
        [DataMember(Name="created_by_id", EmitDefaultValue=false)]
        public string created_by_id { get; private set; }

        /// <summary>
        /// The date and time when the object was created in ISO 8601 UTC format.
        /// </summary>
        /// <value>The date and time when the object was created in ISO 8601 UTC format.</value>
        [DataMember(Name="created_time", EmitDefaultValue=false)]
        public DateTime created_time { get; private set; }

        /// <summary>
        /// Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format.
        /// </summary>
        /// <value>Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format.</value>
        [DataMember(Name="custom_fields", EmitDefaultValue=false)]
        public Dictionary<string, Object> custom_fields { get; set; }

        /// <summary>
        /// The custom fields associated with an object. For more information about custom fields, see [Manage custom fields](https://knowledgecenter.zuora.com/Central_Platform/Manage_Custom_Fields).
        /// </summary>
        /// <value>The custom fields associated with an object. For more information about custom fields, see [Manage custom fields](https://knowledgecenter.zuora.com/Central_Platform/Manage_Custom_Fields).</value>
        [DataMember(Name="custom_objects", EmitDefaultValue=false)]
        public Dictionary<string, Object> custom_objects { get; private set; }

        /// <summary>
        /// Identifier of the customer account to bill. Specify this field or &#x60;account_number&#x60; if you want to create a bill run for a single customer.
        /// </summary>
        /// <value>Identifier of the customer account to bill. Specify this field or &#x60;account_number&#x60; if you want to create a bill run for a single customer.</value>
        [DataMember(Name="account_id", EmitDefaultValue=false)]
        public string account_id { get; set; }

        /// <summary>
        /// Human-readable identifier of the account to bill. Specify this field or &#x60;account_id&#x60; if you want to create a bill run for a single customer.
        /// </summary>
        /// <value>Human-readable identifier of the account to bill. Specify this field or &#x60;account_id&#x60; if you want to create a bill run for a single customer.</value>
        [DataMember(Name="account_number", EmitDefaultValue=false)]
        public string account_number { get; set; }

        /// <summary>
        /// If set to &#x60;true&#x60;, invoices will be automatically emailed to customers.
        /// </summary>
        /// <value>If set to &#x60;true&#x60;, invoices will be automatically emailed to customers.</value>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public bool email { get; set; }

        /// <summary>
        /// Indicates whether to automatically post a billing document after it is created.
        /// </summary>
        /// <value>Indicates whether to automatically post a billing document after it is created.</value>
        [DataMember(Name="post", EmitDefaultValue=false)]
        public bool post { get; set; }

        /// <summary>
        /// If set to &#x60;true&#x60;, subscriptions will be automatically renewed.
        /// </summary>
        /// <value>If set to &#x60;true&#x60;, subscriptions will be automatically renewed.</value>
        [DataMember(Name="renew", EmitDefaultValue=false)]
        public bool renew { get; set; }


        /// <summary>
        /// Identifier of the customer account batch to be included in this bill run.
        /// </summary>
        /// <value>Identifier of the customer account batch to be included in this bill run.</value>
        [DataMember(Name="batches", EmitDefaultValue=false)]
        public List<string> batches { get; set; }

        /// <summary>
        /// The date displayed on the invoice.
        /// </summary>
        /// <value>The date displayed on the invoice.</value>
        [DataMember(Name="invoice_date", EmitDefaultValue=true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime invoice_date { get; set; }

        /// <summary>
        /// All unbilled items on or before this date are included in this bill run.
        /// </summary>
        /// <value>All unbilled items on or before this date are included in this bill run.</value>
        [DataMember(Name="target_date", EmitDefaultValue=true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime target_date { get; set; }

        /// <summary>
        /// If it is set to &#x60;false&#x60;, invoices for zero amounts will not be emailed to customers. 
        /// </summary>
        /// <value>If it is set to &#x60;false&#x60;, invoices for zero amounts will not be emailed to customers. </value>
        [DataMember(Name="email_zero_amount_invoices", EmitDefaultValue=false)]
        public bool email_zero_amount_invoices { get; set; }

        /// <summary>
        /// Type of the charge to be excluded from the bill run.
        /// </summary>
        /// <value>Type of the charge to be excluded from the bill run.</value>
        [DataMember(Name="charges_excluded", EmitDefaultValue=false)]
        public List<string> charges_excluded { get; set; }

        /// <summary>
        /// The name of the bill run.
        /// </summary>
        /// <value>The name of the bill run.</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string name { get; set; }


        /// <summary>
        /// The target subscriptions for this bill run. Note that all these subscriptions must belong to the same account.
        /// </summary>
        /// <value>The target subscriptions for this bill run. Note that all these subscriptions must belong to the same account.</value>
        [DataMember(Name="subscription_ids", EmitDefaultValue=false)]
        public List<string> subscription_ids { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BillRunCreateRequest {\n");
            sb.Append("  id: ").Append(id).Append("\n");
            sb.Append("  updated_by_id: ").Append(updated_by_id).Append("\n");
            sb.Append("  updated_time: ").Append(updated_time).Append("\n");
            sb.Append("  created_by_id: ").Append(created_by_id).Append("\n");
            sb.Append("  created_time: ").Append(created_time).Append("\n");
            sb.Append("  custom_fields: ").Append(custom_fields).Append("\n");
            sb.Append("  custom_objects: ").Append(custom_objects).Append("\n");
            sb.Append("  account_id: ").Append(account_id).Append("\n");
            sb.Append("  account_number: ").Append(account_number).Append("\n");
            sb.Append("  email: ").Append(email).Append("\n");
            sb.Append("  post: ").Append(post).Append("\n");
            sb.Append("  renew: ").Append(renew).Append("\n");
            sb.Append("  day_of_month: ").Append(day_of_month).Append("\n");
            sb.Append("  batches: ").Append(batches).Append("\n");
            sb.Append("  invoice_date: ").Append(invoice_date).Append("\n");
            sb.Append("  target_date: ").Append(target_date).Append("\n");
            sb.Append("  email_zero_amount_invoices: ").Append(email_zero_amount_invoices).Append("\n");
            sb.Append("  charges_excluded: ").Append(charges_excluded).Append("\n");
            sb.Append("  name: ").Append(name).Append("\n");
            sb.Append("  type: ").Append(type).Append("\n");
            sb.Append("  subscription_ids: ").Append(subscription_ids).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BillRunCreateRequest);
        }

        /// <summary>
        /// Returns true if BillRunCreateRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of BillRunCreateRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BillRunCreateRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.id == input.id ||
                    (this.id != null &&
                    this.id.Equals(input.id))
                ) && 
                (
                    this.updated_by_id == input.updated_by_id ||
                    (this.updated_by_id != null &&
                    this.updated_by_id.Equals(input.updated_by_id))
                ) && 
                (
                    this.updated_time == input.updated_time ||
                    (this.updated_time != null &&
                    this.updated_time.Equals(input.updated_time))
                ) && 
                (
                    this.created_by_id == input.created_by_id ||
                    (this.created_by_id != null &&
                    this.created_by_id.Equals(input.created_by_id))
                ) && 
                (
                    this.created_time == input.created_time ||
                    (this.created_time != null &&
                    this.created_time.Equals(input.created_time))
                ) && 
                (
                    this.custom_fields == input.custom_fields ||
                    this.custom_fields != null &&
                    input.custom_fields != null &&
                    this.custom_fields.SequenceEqual(input.custom_fields)
                ) && 
                (
                    this.custom_objects == input.custom_objects ||
                    this.custom_objects != null &&
                    input.custom_objects != null &&
                    this.custom_objects.SequenceEqual(input.custom_objects)
                ) && 
                (
                    this.account_id == input.account_id ||
                    (this.account_id != null &&
                    this.account_id.Equals(input.account_id))
                ) && 
                (
                    this.account_number == input.account_number ||
                    (this.account_number != null &&
                    this.account_number.Equals(input.account_number))
                ) && 
                (
                    this.email == input.email ||
                    (this.email != null &&
                    this.email.Equals(input.email))
                ) && 
                (
                    this.post == input.post ||
                    (this.post != null &&
                    this.post.Equals(input.post))
                ) && 
                (
                    this.renew == input.renew ||
                    (this.renew != null &&
                    this.renew.Equals(input.renew))
                ) && 
                (
                    this.day_of_month == input.day_of_month ||
                    (this.day_of_month != null &&
                    this.day_of_month.Equals(input.day_of_month))
                ) && 
                (
                    this.batches == input.batches ||
                    this.batches != null &&
                    input.batches != null &&
                    this.batches.SequenceEqual(input.batches)
                ) && 
                (
                    this.invoice_date == input.invoice_date ||
                    (this.invoice_date != null &&
                    this.invoice_date.Equals(input.invoice_date))
                ) && 
                (
                    this.target_date == input.target_date ||
                    (this.target_date != null &&
                    this.target_date.Equals(input.target_date))
                ) && 
                (
                    this.email_zero_amount_invoices == input.email_zero_amount_invoices ||
                    (this.email_zero_amount_invoices != null &&
                    this.email_zero_amount_invoices.Equals(input.email_zero_amount_invoices))
                ) && 
                (
                    this.charges_excluded == input.charges_excluded ||
                    this.charges_excluded != null &&
                    input.charges_excluded != null &&
                    this.charges_excluded.SequenceEqual(input.charges_excluded)
                ) && 
                (
                    this.name == input.name ||
                    (this.name != null &&
                    this.name.Equals(input.name))
                ) && 
                (
                    this.type == input.type ||
                    (this.type != null &&
                    this.type.Equals(input.type))
                ) && 
                (
                    this.subscription_ids == input.subscription_ids ||
                    this.subscription_ids != null &&
                    input.subscription_ids != null &&
                    this.subscription_ids.SequenceEqual(input.subscription_ids)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.id != null)
                    hashCode = hashCode * 59 + this.id.GetHashCode();
                if (this.updated_by_id != null)
                    hashCode = hashCode * 59 + this.updated_by_id.GetHashCode();
                if (this.updated_time != null)
                    hashCode = hashCode * 59 + this.updated_time.GetHashCode();
                if (this.created_by_id != null)
                    hashCode = hashCode * 59 + this.created_by_id.GetHashCode();
                if (this.created_time != null)
                    hashCode = hashCode * 59 + this.created_time.GetHashCode();
                if (this.custom_fields != null)
                    hashCode = hashCode * 59 + this.custom_fields.GetHashCode();
                if (this.custom_objects != null)
                    hashCode = hashCode * 59 + this.custom_objects.GetHashCode();
                if (this.account_id != null)
                    hashCode = hashCode * 59 + this.account_id.GetHashCode();
                if (this.account_number != null)
                    hashCode = hashCode * 59 + this.account_number.GetHashCode();
                if (this.email != null)
                    hashCode = hashCode * 59 + this.email.GetHashCode();
                if (this.post != null)
                    hashCode = hashCode * 59 + this.post.GetHashCode();
                if (this.renew != null)
                    hashCode = hashCode * 59 + this.renew.GetHashCode();
                if (this.day_of_month != null)
                    hashCode = hashCode * 59 + this.day_of_month.GetHashCode();
                if (this.batches != null)
                    hashCode = hashCode * 59 + this.batches.GetHashCode();
                if (this.invoice_date != null)
                    hashCode = hashCode * 59 + this.invoice_date.GetHashCode();
                if (this.target_date != null)
                    hashCode = hashCode * 59 + this.target_date.GetHashCode();
                if (this.email_zero_amount_invoices != null)
                    hashCode = hashCode * 59 + this.email_zero_amount_invoices.GetHashCode();
                if (this.charges_excluded != null)
                    hashCode = hashCode * 59 + this.charges_excluded.GetHashCode();
                if (this.name != null)
                    hashCode = hashCode * 59 + this.name.GetHashCode();
                if (this.type != null)
                    hashCode = hashCode * 59 + this.type.GetHashCode();
                if (this.subscription_ids != null)
                    hashCode = hashCode * 59 + this.subscription_ids.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
