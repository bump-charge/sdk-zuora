/*
 * Quickstart API Reference
 *
 * Zuora Quickstart API is recommended for new customers and integrators, allowing new integrators to swiftly integrate with Zuora. It supports essential business use cases.   To use the Quickstart API, you must have the following features enabled on your tenant:   * [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization)  * [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement)  To find the latest changes made to the Zuora Quickstart API, check the [Quickstart API Changelog](https://www.zuora.com/developer/quickstart-api/changelog/2022q4-changelog/).  We recommend that you subscribe to [Developers Community](https://community.zuora.com/communities/community-home?communitykey=e2a932b4-50c4-4019-a3e8-362e38714df3) to get notifications when a new version is released.  
 *
 * The version of the OpenAPI document: 2023-09-25
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Zuora.Client.OpenAPIDateConverter;

namespace Zuora.Model
{
    /// <summary>
    /// PaymentScheduleItemRetryBulk
    /// </summary>
    [DataContract]
    public partial class PaymentScheduleItemRetryBulk :  IEquatable<PaymentScheduleItemRetryBulk>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentScheduleItemRetryBulk" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="paymentGatewayId">ID of the payment gateway used to collect payments. The default value is the account&#39;s default payment gateway ID. If no payment gateway ID is found on the customer account level, the default value will be the tenant&#39;s default payment gateway ID. This field will be ignored when &#x60;items&#x60; is specified..</param>
        /// <param name="paymentMethodId">ID of the payment method. The default value is the account&#39;s default payment method ID. This field will be ignored when &#x60;items&#x60; is specified..</param>
        public PaymentScheduleItemRetryBulk(string id = default(string), string paymentGatewayId = default(string), string paymentMethodId = default(string))
        {
            this.id = id;
            this.payment_gateway_id = paymentGatewayId;
            this.payment_method_id = paymentMethodId;
        }

        /// <summary>
        /// Gets or Sets id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string id { get; set; }

        /// <summary>
        /// ID of the payment gateway used to collect payments. The default value is the account&#39;s default payment gateway ID. If no payment gateway ID is found on the customer account level, the default value will be the tenant&#39;s default payment gateway ID. This field will be ignored when &#x60;items&#x60; is specified.
        /// </summary>
        /// <value>ID of the payment gateway used to collect payments. The default value is the account&#39;s default payment gateway ID. If no payment gateway ID is found on the customer account level, the default value will be the tenant&#39;s default payment gateway ID. This field will be ignored when &#x60;items&#x60; is specified.</value>
        [DataMember(Name="payment_gateway_id", EmitDefaultValue=false)]
        public string payment_gateway_id { get; set; }

        /// <summary>
        /// ID of the payment method. The default value is the account&#39;s default payment method ID. This field will be ignored when &#x60;items&#x60; is specified.
        /// </summary>
        /// <value>ID of the payment method. The default value is the account&#39;s default payment method ID. This field will be ignored when &#x60;items&#x60; is specified.</value>
        [DataMember(Name="payment_method_id", EmitDefaultValue=false)]
        public string payment_method_id { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PaymentScheduleItemRetryBulk {\n");
            sb.Append("  id: ").Append(id).Append("\n");
            sb.Append("  payment_gateway_id: ").Append(payment_gateway_id).Append("\n");
            sb.Append("  payment_method_id: ").Append(payment_method_id).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PaymentScheduleItemRetryBulk);
        }

        /// <summary>
        /// Returns true if PaymentScheduleItemRetryBulk instances are equal
        /// </summary>
        /// <param name="input">Instance of PaymentScheduleItemRetryBulk to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PaymentScheduleItemRetryBulk input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.id == input.id ||
                    (this.id != null &&
                    this.id.Equals(input.id))
                ) && 
                (
                    this.payment_gateway_id == input.payment_gateway_id ||
                    (this.payment_gateway_id != null &&
                    this.payment_gateway_id.Equals(input.payment_gateway_id))
                ) && 
                (
                    this.payment_method_id == input.payment_method_id ||
                    (this.payment_method_id != null &&
                    this.payment_method_id.Equals(input.payment_method_id))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.id != null)
                    hashCode = hashCode * 59 + this.id.GetHashCode();
                if (this.payment_gateway_id != null)
                    hashCode = hashCode * 59 + this.payment_gateway_id.GetHashCode();
                if (this.payment_method_id != null)
                    hashCode = hashCode * 59 + this.payment_method_id.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
