/*
 * Quickstart API Reference
 *
 * Zuora Quickstart API is recommended for new customers and integrators, allowing new integrators to swiftly integrate with Zuora. It supports essential business use cases.   To use the Quickstart API, you must have the following features enabled on your tenant:   * [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization)  * [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement)  To find the latest changes made to the Zuora Quickstart API, check the [Quickstart API Changelog](https://www.zuora.com/developer/quickstart-api/changelog/2022q4-changelog/).  We recommend that you subscribe to [Developers Community](https://community.zuora.com/communities/community-home?communitykey=e2a932b4-50c4-4019-a3e8-362e38714df3) to get notifications when a new version is released.  
 *
 * The version of the OpenAPI document: 2023-09-25
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Zuora.Client.OpenAPIDateConverter;

namespace Zuora.Model
{
    /// <summary>
    /// The account data.
    /// </summary>
    [DataContract]
    public partial class Account :  IEquatable<Account>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Account" /> class.
        /// </summary>
        /// <param name="customFields">Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format..</param>
        /// <param name="accountNumber">Human-readable identifier of the account. It can be user-supplied..</param>
        /// <param name="billingDocumentSettings">billingDocumentSettings.</param>
        /// <param name="batch">The identifier of a bill run batch..</param>
        /// <param name="billCycleDay">The day of the month on which your customer will be invoiced. For month-end specify 31..</param>
        /// <param name="communicationProfileId">Identifier of the communication profile associated with this customer..</param>
        /// <param name="crmId">CRM account identifier..</param>
        /// <param name="defaultPaymentMethodId">Identifier of the default payment method on the customer account..</param>
        /// <param name="name">The name of the customer account..</param>
        /// <param name="description">An arbitrary string attached to the object. Often useful for displaying to users..</param>
        /// <param name="parentAccountId">Identifier of this customer&#39;s parent account, if any..</param>
        /// <param name="paymentGateway">Payment gateway name..</param>
        /// <param name="paymentTerms">Payment terms configured in **Billing Settings &gt; Payment Terms** of your Zuora tenant..</param>
        /// <param name="sequenceSetId">The identifier or the billing document sequence set that is assigned to the customer account..</param>
        /// <param name="autoPay">Controls whether future payments are automatically billed when they are due..</param>
        /// <param name="taxCertificate">taxCertificate.</param>
        /// <param name="taxIdentifier">taxIdentifier.</param>
        /// <param name="currency">Three-letter ISO currency code. Once the currency is set for an account, it cannot be updated..</param>
        /// <param name="salesRep">The name of the sales representative associated with this account.</param>
        /// <param name="billToId">Customer billing address..</param>
        /// <param name="soldToId">Customer address used for calculating tax..</param>
        /// <param name="defaultPaymentMethod">The default payment method for the customer..</param>
        public Account(Dictionary<string, Object> customFields = default(Dictionary<string, Object>), string accountNumber = default(string), BillingDocumentSettings billingDocumentSettings = default(BillingDocumentSettings), string batch = default(string), int billCycleDay = default(int), string communicationProfileId = default(string), string crmId = default(string), string defaultPaymentMethodId = default(string), string name = default(string), string description = default(string), string parentAccountId = default(string), string paymentGateway = default(string), string paymentTerms = default(string), string sequenceSetId = default(string), bool autoPay = default(bool), TaxCertificate taxCertificate = default(TaxCertificate), TaxIdentifier taxIdentifier = default(TaxIdentifier), string currency = default(string), string salesRep = default(string), string billToId = default(string), string soldToId = default(string), PaymentMethod defaultPaymentMethod = default(PaymentMethod))
        {
            this.default_payment_method = defaultPaymentMethod;
            this.custom_fields = customFields;
            this.account_number = accountNumber;
            this.billing_document_settings = billingDocumentSettings;
            this.batch = batch;
            this.bill_cycle_day = billCycleDay;
            this.communication_profile_id = communicationProfileId;
            this.crm_id = crmId;
            this.default_payment_method_id = defaultPaymentMethodId;
            this.name = name;
            this.description = description;
            this.parent_account_id = parentAccountId;
            this.payment_gateway = paymentGateway;
            this.payment_terms = paymentTerms;
            this.sequence_set_id = sequenceSetId;
            this.auto_pay = autoPay;
            this.tax_certificate = taxCertificate;
            this.tax_identifier = taxIdentifier;
            this.currency = currency;
            this.sales_rep = salesRep;
            this.bill_to_id = billToId;
            this.sold_to_id = soldToId;
            this.default_payment_method = defaultPaymentMethod;
        }

        /// <summary>
        /// Unique identifier for the object.
        /// </summary>
        /// <value>Unique identifier for the object.</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string id { get; private set; }

        /// <summary>
        /// Unique identifier of the Zuora user who last updated the object
        /// </summary>
        /// <value>Unique identifier of the Zuora user who last updated the object</value>
        [DataMember(Name="updated_by_id", EmitDefaultValue=false)]
        public string updated_by_id { get; private set; }

        /// <summary>
        /// The date and time when the object was last updated in ISO 8601 UTC format.
        /// </summary>
        /// <value>The date and time when the object was last updated in ISO 8601 UTC format.</value>
        [DataMember(Name="updated_time", EmitDefaultValue=false)]
        public DateTime updated_time { get; private set; }

        /// <summary>
        /// Unique identifier of the Zuora user who created the object
        /// </summary>
        /// <value>Unique identifier of the Zuora user who created the object</value>
        [DataMember(Name="created_by_id", EmitDefaultValue=false)]
        public string created_by_id { get; private set; }

        /// <summary>
        /// The date and time when the object was created in ISO 8601 UTC format.
        /// </summary>
        /// <value>The date and time when the object was created in ISO 8601 UTC format.</value>
        [DataMember(Name="created_time", EmitDefaultValue=false)]
        public DateTime created_time { get; private set; }

        /// <summary>
        /// Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format.
        /// </summary>
        /// <value>Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format.</value>
        [DataMember(Name="custom_fields", EmitDefaultValue=false)]
        public Dictionary<string, Object> custom_fields { get; set; }

        /// <summary>
        /// The custom fields associated with an object. For more information about custom fields, see [Manage custom fields](https://knowledgecenter.zuora.com/Central_Platform/Manage_Custom_Fields).
        /// </summary>
        /// <value>The custom fields associated with an object. For more information about custom fields, see [Manage custom fields](https://knowledgecenter.zuora.com/Central_Platform/Manage_Custom_Fields).</value>
        [DataMember(Name="custom_objects", EmitDefaultValue=false)]
        public Dictionary<string, Object> custom_objects { get; private set; }

        /// <summary>
        /// Human-readable identifier of the account. It can be user-supplied.
        /// </summary>
        /// <value>Human-readable identifier of the account. It can be user-supplied.</value>
        [DataMember(Name="account_number", EmitDefaultValue=false)]
        public string account_number { get; set; }

        /// <summary>
        /// Gets or Sets billing_document_settings
        /// </summary>
        [DataMember(Name="billing_document_settings", EmitDefaultValue=false)]
        public BillingDocumentSettings billing_document_settings { get; set; }

        /// <summary>
        /// The identifier of a bill run batch.
        /// </summary>
        /// <value>The identifier of a bill run batch.</value>
        [DataMember(Name="batch", EmitDefaultValue=false)]
        public string batch { get; set; }

        /// <summary>
        /// The day of the month on which your customer will be invoiced. For month-end specify 31.
        /// </summary>
        /// <value>The day of the month on which your customer will be invoiced. For month-end specify 31.</value>
        [DataMember(Name="bill_cycle_day", EmitDefaultValue=false)]
        public int bill_cycle_day { get; set; }

        /// <summary>
        /// Customer billing address.
        /// </summary>
        /// <value>Customer billing address.</value>
        [DataMember(Name="bill_to", EmitDefaultValue=true)]
        public Contact bill_to { get; private set; }

        /// <summary>
        /// Customer address used for calculating tax.
        /// </summary>
        /// <value>Customer address used for calculating tax.</value>
        [DataMember(Name="sold_to", EmitDefaultValue=true)]
        public Contact sold_to { get; private set; }

        /// <summary>
        /// Identifier of the communication profile associated with this customer.
        /// </summary>
        /// <value>Identifier of the communication profile associated with this customer.</value>
        [DataMember(Name="communication_profile_id", EmitDefaultValue=false)]
        public string communication_profile_id { get; set; }

        /// <summary>
        /// CRM account identifier.
        /// </summary>
        /// <value>CRM account identifier.</value>
        [DataMember(Name="crm_id", EmitDefaultValue=false)]
        public string crm_id { get; set; }

        /// <summary>
        /// Identifier of the default payment method on the customer account.
        /// </summary>
        /// <value>Identifier of the default payment method on the customer account.</value>
        [DataMember(Name="default_payment_method_id", EmitDefaultValue=false)]
        public string default_payment_method_id { get; set; }

        /// <summary>
        /// The name of the customer account.
        /// </summary>
        /// <value>The name of the customer account.</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string name { get; set; }

        /// <summary>
        /// An arbitrary string attached to the object. Often useful for displaying to users.
        /// </summary>
        /// <value>An arbitrary string attached to the object. Often useful for displaying to users.</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string description { get; set; }

        /// <summary>
        /// Identifier of this customer&#39;s parent account, if any.
        /// </summary>
        /// <value>Identifier of this customer&#39;s parent account, if any.</value>
        [DataMember(Name="parent_account_id", EmitDefaultValue=false)]
        public string parent_account_id { get; set; }

        /// <summary>
        /// Payment gateway name.
        /// </summary>
        /// <value>Payment gateway name.</value>
        [DataMember(Name="payment_gateway", EmitDefaultValue=false)]
        public string payment_gateway { get; set; }

        /// <summary>
        /// Payment terms configured in **Billing Settings &gt; Payment Terms** of your Zuora tenant.
        /// </summary>
        /// <value>Payment terms configured in **Billing Settings &gt; Payment Terms** of your Zuora tenant.</value>
        [DataMember(Name="payment_terms", EmitDefaultValue=false)]
        public string payment_terms { get; set; }

        /// <summary>
        /// The identifier or the billing document sequence set that is assigned to the customer account.
        /// </summary>
        /// <value>The identifier or the billing document sequence set that is assigned to the customer account.</value>
        [DataMember(Name="sequence_set_id", EmitDefaultValue=false)]
        public string sequence_set_id { get; set; }

        /// <summary>
        /// Controls whether future payments are automatically billed when they are due.
        /// </summary>
        /// <value>Controls whether future payments are automatically billed when they are due.</value>
        [DataMember(Name="auto_pay", EmitDefaultValue=false)]
        public bool auto_pay { get; set; }

        /// <summary>
        /// Gets or Sets tax_certificate
        /// </summary>
        [DataMember(Name="tax_certificate", EmitDefaultValue=false)]
        public TaxCertificate tax_certificate { get; set; }

        /// <summary>
        /// Gets or Sets tax_identifier
        /// </summary>
        [DataMember(Name="tax_identifier", EmitDefaultValue=false)]
        public TaxIdentifier tax_identifier { get; set; }

        /// <summary>
        /// Three-letter ISO currency code. Once the currency is set for an account, it cannot be updated.
        /// </summary>
        /// <value>Three-letter ISO currency code. Once the currency is set for an account, it cannot be updated.</value>
        [DataMember(Name="currency", EmitDefaultValue=false)]
        public string currency { get; set; }

        /// <summary>
        /// The name of the sales representative associated with this account
        /// </summary>
        /// <value>The name of the sales representative associated with this account</value>
        [DataMember(Name="sales_rep", EmitDefaultValue=false)]
        public string sales_rep { get; set; }

        /// <summary>
        /// Usually used to disable the customer account. The default is true. If false, attempts to create subscriptions for the customer account will fail.
        /// </summary>
        /// <value>Usually used to disable the customer account. The default is true. If false, attempts to create subscriptions for the customer account will fail.</value>
        [DataMember(Name="enabled", EmitDefaultValue=false)]
        public bool enabled { get; private set; }

        /// <summary>
        /// Total remaining balance of all posted debit memos.
        /// </summary>
        /// <value>Total remaining balance of all posted debit memos.</value>
        [DataMember(Name="remaining_debit_memo_balance", EmitDefaultValue=false)]
        public decimal remaining_debit_memo_balance { get; private set; }

        /// <summary>
        /// Total remaining balance of all posted invoices.
        /// </summary>
        /// <value>Total remaining balance of all posted invoices.</value>
        [DataMember(Name="remaining_invoice_balance", EmitDefaultValue=false)]
        public decimal remaining_invoice_balance { get; private set; }

        /// <summary>
        /// Total remaining balance of all posted credit memos.
        /// </summary>
        /// <value>Total remaining balance of all posted credit memos.</value>
        [DataMember(Name="remaining_credit_memo_balance", EmitDefaultValue=false)]
        public decimal remaining_credit_memo_balance { get; private set; }

        /// <summary>
        /// Total remaining balance of all posted payments.
        /// </summary>
        /// <value>Total remaining balance of all posted payments.</value>
        [DataMember(Name="remaining_payment_balance", EmitDefaultValue=false)]
        public decimal remaining_payment_balance { get; private set; }

        /// <summary>
        /// Customer billing address.
        /// </summary>
        /// <value>Customer billing address.</value>
        [DataMember(Name="bill_to_id", EmitDefaultValue=false)]
        public string bill_to_id { get; set; }

        /// <summary>
        /// Customer address used for calculating tax.
        /// </summary>
        /// <value>Customer address used for calculating tax.</value>
        [DataMember(Name="sold_to_id", EmitDefaultValue=false)]
        public string sold_to_id { get; set; }

        /// <summary>
        /// The default payment method for the customer.
        /// </summary>
        /// <value>The default payment method for the customer.</value>
        [DataMember(Name="default_payment_method", EmitDefaultValue=true)]
        public PaymentMethod default_payment_method { get; set; }

        /// <summary>
        /// List of customer billing documents.
        /// </summary>
        /// <value>List of customer billing documents.</value>
        [DataMember(Name="billing_documents", EmitDefaultValue=true)]
        public BillingDocumentListResponse billing_documents { get; private set; }

        /// <summary>
        /// List of customer payments.
        /// </summary>
        /// <value>List of customer payments.</value>
        [DataMember(Name="payments", EmitDefaultValue=true)]
        public PaymentListResponse payments { get; private set; }

        /// <summary>
        /// List of customer payment methods.
        /// </summary>
        /// <value>List of customer payment methods.</value>
        [DataMember(Name="payment_methods", EmitDefaultValue=true)]
        public PaymentMethodListResponse payment_methods { get; private set; }

        /// <summary>
        /// List of customer subscriptions.
        /// </summary>
        /// <value>List of customer subscriptions.</value>
        [DataMember(Name="subscriptions", EmitDefaultValue=true)]
        public SubscriptionListResponse subscriptions { get; private set; }

        /// <summary>
        /// List of customer usages.
        /// </summary>
        /// <value>List of customer usages.</value>
        [DataMember(Name="usage_records", EmitDefaultValue=true)]
        public ListUsageResponse usage_records { get; private set; }

        /// <summary>
        /// List of credit memo
        /// </summary>
        /// <value>List of credit memo</value>
        [DataMember(Name="credit_memos", EmitDefaultValue=true)]
        public CreditMemoListResponse credit_memos { get; private set; }

        /// <summary>
        /// List of debit memo
        /// </summary>
        /// <value>List of debit memo</value>
        [DataMember(Name="debit_memos", EmitDefaultValue=true)]
        public DebitMemoListResponse debit_memos { get; private set; }

        /// <summary>
        /// List of invoices
        /// </summary>
        /// <value>List of invoices</value>
        [DataMember(Name="invoices", EmitDefaultValue=true)]
        public InvoiceListResponse invoices { get; private set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Account {\n");
            sb.Append("  id: ").Append(id).Append("\n");
            sb.Append("  updated_by_id: ").Append(updated_by_id).Append("\n");
            sb.Append("  updated_time: ").Append(updated_time).Append("\n");
            sb.Append("  created_by_id: ").Append(created_by_id).Append("\n");
            sb.Append("  created_time: ").Append(created_time).Append("\n");
            sb.Append("  custom_fields: ").Append(custom_fields).Append("\n");
            sb.Append("  custom_objects: ").Append(custom_objects).Append("\n");
            sb.Append("  account_number: ").Append(account_number).Append("\n");
            sb.Append("  billing_document_settings: ").Append(billing_document_settings).Append("\n");
            sb.Append("  batch: ").Append(batch).Append("\n");
            sb.Append("  bill_cycle_day: ").Append(bill_cycle_day).Append("\n");
            sb.Append("  bill_to: ").Append(bill_to).Append("\n");
            sb.Append("  sold_to: ").Append(sold_to).Append("\n");
            sb.Append("  communication_profile_id: ").Append(communication_profile_id).Append("\n");
            sb.Append("  crm_id: ").Append(crm_id).Append("\n");
            sb.Append("  default_payment_method_id: ").Append(default_payment_method_id).Append("\n");
            sb.Append("  name: ").Append(name).Append("\n");
            sb.Append("  description: ").Append(description).Append("\n");
            sb.Append("  parent_account_id: ").Append(parent_account_id).Append("\n");
            sb.Append("  payment_gateway: ").Append(payment_gateway).Append("\n");
            sb.Append("  payment_terms: ").Append(payment_terms).Append("\n");
            sb.Append("  sequence_set_id: ").Append(sequence_set_id).Append("\n");
            sb.Append("  auto_pay: ").Append(auto_pay).Append("\n");
            sb.Append("  tax_certificate: ").Append(tax_certificate).Append("\n");
            sb.Append("  tax_identifier: ").Append(tax_identifier).Append("\n");
            sb.Append("  currency: ").Append(currency).Append("\n");
            sb.Append("  sales_rep: ").Append(sales_rep).Append("\n");
            sb.Append("  enabled: ").Append(enabled).Append("\n");
            sb.Append("  remaining_debit_memo_balance: ").Append(remaining_debit_memo_balance).Append("\n");
            sb.Append("  remaining_invoice_balance: ").Append(remaining_invoice_balance).Append("\n");
            sb.Append("  remaining_credit_memo_balance: ").Append(remaining_credit_memo_balance).Append("\n");
            sb.Append("  remaining_payment_balance: ").Append(remaining_payment_balance).Append("\n");
            sb.Append("  bill_to_id: ").Append(bill_to_id).Append("\n");
            sb.Append("  sold_to_id: ").Append(sold_to_id).Append("\n");
            sb.Append("  default_payment_method: ").Append(default_payment_method).Append("\n");
            sb.Append("  billing_documents: ").Append(billing_documents).Append("\n");
            sb.Append("  payments: ").Append(payments).Append("\n");
            sb.Append("  payment_methods: ").Append(payment_methods).Append("\n");
            sb.Append("  subscriptions: ").Append(subscriptions).Append("\n");
            sb.Append("  usage_records: ").Append(usage_records).Append("\n");
            sb.Append("  credit_memos: ").Append(credit_memos).Append("\n");
            sb.Append("  debit_memos: ").Append(debit_memos).Append("\n");
            sb.Append("  invoices: ").Append(invoices).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Account);
        }

        /// <summary>
        /// Returns true if Account instances are equal
        /// </summary>
        /// <param name="input">Instance of Account to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Account input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.id == input.id ||
                    (this.id != null &&
                    this.id.Equals(input.id))
                ) && 
                (
                    this.updated_by_id == input.updated_by_id ||
                    (this.updated_by_id != null &&
                    this.updated_by_id.Equals(input.updated_by_id))
                ) && 
                (
                    this.updated_time == input.updated_time ||
                    (this.updated_time != null &&
                    this.updated_time.Equals(input.updated_time))
                ) && 
                (
                    this.created_by_id == input.created_by_id ||
                    (this.created_by_id != null &&
                    this.created_by_id.Equals(input.created_by_id))
                ) && 
                (
                    this.created_time == input.created_time ||
                    (this.created_time != null &&
                    this.created_time.Equals(input.created_time))
                ) && 
                (
                    this.custom_fields == input.custom_fields ||
                    this.custom_fields != null &&
                    input.custom_fields != null &&
                    this.custom_fields.SequenceEqual(input.custom_fields)
                ) && 
                (
                    this.custom_objects == input.custom_objects ||
                    this.custom_objects != null &&
                    input.custom_objects != null &&
                    this.custom_objects.SequenceEqual(input.custom_objects)
                ) && 
                (
                    this.account_number == input.account_number ||
                    (this.account_number != null &&
                    this.account_number.Equals(input.account_number))
                ) && 
                (
                    this.billing_document_settings == input.billing_document_settings ||
                    (this.billing_document_settings != null &&
                    this.billing_document_settings.Equals(input.billing_document_settings))
                ) && 
                (
                    this.batch == input.batch ||
                    (this.batch != null &&
                    this.batch.Equals(input.batch))
                ) && 
                (
                    this.bill_cycle_day == input.bill_cycle_day ||
                    (this.bill_cycle_day != null &&
                    this.bill_cycle_day.Equals(input.bill_cycle_day))
                ) && 
                (
                    this.bill_to == input.bill_to ||
                    (this.bill_to != null &&
                    this.bill_to.Equals(input.bill_to))
                ) && 
                (
                    this.sold_to == input.sold_to ||
                    (this.sold_to != null &&
                    this.sold_to.Equals(input.sold_to))
                ) && 
                (
                    this.communication_profile_id == input.communication_profile_id ||
                    (this.communication_profile_id != null &&
                    this.communication_profile_id.Equals(input.communication_profile_id))
                ) && 
                (
                    this.crm_id == input.crm_id ||
                    (this.crm_id != null &&
                    this.crm_id.Equals(input.crm_id))
                ) && 
                (
                    this.default_payment_method_id == input.default_payment_method_id ||
                    (this.default_payment_method_id != null &&
                    this.default_payment_method_id.Equals(input.default_payment_method_id))
                ) && 
                (
                    this.name == input.name ||
                    (this.name != null &&
                    this.name.Equals(input.name))
                ) && 
                (
                    this.description == input.description ||
                    (this.description != null &&
                    this.description.Equals(input.description))
                ) && 
                (
                    this.parent_account_id == input.parent_account_id ||
                    (this.parent_account_id != null &&
                    this.parent_account_id.Equals(input.parent_account_id))
                ) && 
                (
                    this.payment_gateway == input.payment_gateway ||
                    (this.payment_gateway != null &&
                    this.payment_gateway.Equals(input.payment_gateway))
                ) && 
                (
                    this.payment_terms == input.payment_terms ||
                    (this.payment_terms != null &&
                    this.payment_terms.Equals(input.payment_terms))
                ) && 
                (
                    this.sequence_set_id == input.sequence_set_id ||
                    (this.sequence_set_id != null &&
                    this.sequence_set_id.Equals(input.sequence_set_id))
                ) && 
                (
                    this.auto_pay == input.auto_pay ||
                    (this.auto_pay != null &&
                    this.auto_pay.Equals(input.auto_pay))
                ) && 
                (
                    this.tax_certificate == input.tax_certificate ||
                    (this.tax_certificate != null &&
                    this.tax_certificate.Equals(input.tax_certificate))
                ) && 
                (
                    this.tax_identifier == input.tax_identifier ||
                    (this.tax_identifier != null &&
                    this.tax_identifier.Equals(input.tax_identifier))
                ) && 
                (
                    this.currency == input.currency ||
                    (this.currency != null &&
                    this.currency.Equals(input.currency))
                ) && 
                (
                    this.sales_rep == input.sales_rep ||
                    (this.sales_rep != null &&
                    this.sales_rep.Equals(input.sales_rep))
                ) && 
                (
                    this.enabled == input.enabled ||
                    (this.enabled != null &&
                    this.enabled.Equals(input.enabled))
                ) && 
                (
                    this.remaining_debit_memo_balance == input.remaining_debit_memo_balance ||
                    (this.remaining_debit_memo_balance != null &&
                    this.remaining_debit_memo_balance.Equals(input.remaining_debit_memo_balance))
                ) && 
                (
                    this.remaining_invoice_balance == input.remaining_invoice_balance ||
                    (this.remaining_invoice_balance != null &&
                    this.remaining_invoice_balance.Equals(input.remaining_invoice_balance))
                ) && 
                (
                    this.remaining_credit_memo_balance == input.remaining_credit_memo_balance ||
                    (this.remaining_credit_memo_balance != null &&
                    this.remaining_credit_memo_balance.Equals(input.remaining_credit_memo_balance))
                ) && 
                (
                    this.remaining_payment_balance == input.remaining_payment_balance ||
                    (this.remaining_payment_balance != null &&
                    this.remaining_payment_balance.Equals(input.remaining_payment_balance))
                ) && 
                (
                    this.bill_to_id == input.bill_to_id ||
                    (this.bill_to_id != null &&
                    this.bill_to_id.Equals(input.bill_to_id))
                ) && 
                (
                    this.sold_to_id == input.sold_to_id ||
                    (this.sold_to_id != null &&
                    this.sold_to_id.Equals(input.sold_to_id))
                ) && 
                (
                    this.default_payment_method == input.default_payment_method ||
                    (this.default_payment_method != null &&
                    this.default_payment_method.Equals(input.default_payment_method))
                ) && 
                (
                    this.billing_documents == input.billing_documents ||
                    (this.billing_documents != null &&
                    this.billing_documents.Equals(input.billing_documents))
                ) && 
                (
                    this.payments == input.payments ||
                    (this.payments != null &&
                    this.payments.Equals(input.payments))
                ) && 
                (
                    this.payment_methods == input.payment_methods ||
                    (this.payment_methods != null &&
                    this.payment_methods.Equals(input.payment_methods))
                ) && 
                (
                    this.subscriptions == input.subscriptions ||
                    (this.subscriptions != null &&
                    this.subscriptions.Equals(input.subscriptions))
                ) && 
                (
                    this.usage_records == input.usage_records ||
                    (this.usage_records != null &&
                    this.usage_records.Equals(input.usage_records))
                ) && 
                (
                    this.credit_memos == input.credit_memos ||
                    (this.credit_memos != null &&
                    this.credit_memos.Equals(input.credit_memos))
                ) && 
                (
                    this.debit_memos == input.debit_memos ||
                    (this.debit_memos != null &&
                    this.debit_memos.Equals(input.debit_memos))
                ) && 
                (
                    this.invoices == input.invoices ||
                    (this.invoices != null &&
                    this.invoices.Equals(input.invoices))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.id != null)
                    hashCode = hashCode * 59 + this.id.GetHashCode();
                if (this.updated_by_id != null)
                    hashCode = hashCode * 59 + this.updated_by_id.GetHashCode();
                if (this.updated_time != null)
                    hashCode = hashCode * 59 + this.updated_time.GetHashCode();
                if (this.created_by_id != null)
                    hashCode = hashCode * 59 + this.created_by_id.GetHashCode();
                if (this.created_time != null)
                    hashCode = hashCode * 59 + this.created_time.GetHashCode();
                if (this.custom_fields != null)
                    hashCode = hashCode * 59 + this.custom_fields.GetHashCode();
                if (this.custom_objects != null)
                    hashCode = hashCode * 59 + this.custom_objects.GetHashCode();
                if (this.account_number != null)
                    hashCode = hashCode * 59 + this.account_number.GetHashCode();
                if (this.billing_document_settings != null)
                    hashCode = hashCode * 59 + this.billing_document_settings.GetHashCode();
                if (this.batch != null)
                    hashCode = hashCode * 59 + this.batch.GetHashCode();
                if (this.bill_cycle_day != null)
                    hashCode = hashCode * 59 + this.bill_cycle_day.GetHashCode();
                if (this.bill_to != null)
                    hashCode = hashCode * 59 + this.bill_to.GetHashCode();
                if (this.sold_to != null)
                    hashCode = hashCode * 59 + this.sold_to.GetHashCode();
                if (this.communication_profile_id != null)
                    hashCode = hashCode * 59 + this.communication_profile_id.GetHashCode();
                if (this.crm_id != null)
                    hashCode = hashCode * 59 + this.crm_id.GetHashCode();
                if (this.default_payment_method_id != null)
                    hashCode = hashCode * 59 + this.default_payment_method_id.GetHashCode();
                if (this.name != null)
                    hashCode = hashCode * 59 + this.name.GetHashCode();
                if (this.description != null)
                    hashCode = hashCode * 59 + this.description.GetHashCode();
                if (this.parent_account_id != null)
                    hashCode = hashCode * 59 + this.parent_account_id.GetHashCode();
                if (this.payment_gateway != null)
                    hashCode = hashCode * 59 + this.payment_gateway.GetHashCode();
                if (this.payment_terms != null)
                    hashCode = hashCode * 59 + this.payment_terms.GetHashCode();
                if (this.sequence_set_id != null)
                    hashCode = hashCode * 59 + this.sequence_set_id.GetHashCode();
                if (this.auto_pay != null)
                    hashCode = hashCode * 59 + this.auto_pay.GetHashCode();
                if (this.tax_certificate != null)
                    hashCode = hashCode * 59 + this.tax_certificate.GetHashCode();
                if (this.tax_identifier != null)
                    hashCode = hashCode * 59 + this.tax_identifier.GetHashCode();
                if (this.currency != null)
                    hashCode = hashCode * 59 + this.currency.GetHashCode();
                if (this.sales_rep != null)
                    hashCode = hashCode * 59 + this.sales_rep.GetHashCode();
                if (this.enabled != null)
                    hashCode = hashCode * 59 + this.enabled.GetHashCode();
                if (this.remaining_debit_memo_balance != null)
                    hashCode = hashCode * 59 + this.remaining_debit_memo_balance.GetHashCode();
                if (this.remaining_invoice_balance != null)
                    hashCode = hashCode * 59 + this.remaining_invoice_balance.GetHashCode();
                if (this.remaining_credit_memo_balance != null)
                    hashCode = hashCode * 59 + this.remaining_credit_memo_balance.GetHashCode();
                if (this.remaining_payment_balance != null)
                    hashCode = hashCode * 59 + this.remaining_payment_balance.GetHashCode();
                if (this.bill_to_id != null)
                    hashCode = hashCode * 59 + this.bill_to_id.GetHashCode();
                if (this.sold_to_id != null)
                    hashCode = hashCode * 59 + this.sold_to_id.GetHashCode();
                if (this.default_payment_method != null)
                    hashCode = hashCode * 59 + this.default_payment_method.GetHashCode();
                if (this.billing_documents != null)
                    hashCode = hashCode * 59 + this.billing_documents.GetHashCode();
                if (this.payments != null)
                    hashCode = hashCode * 59 + this.payments.GetHashCode();
                if (this.payment_methods != null)
                    hashCode = hashCode * 59 + this.payment_methods.GetHashCode();
                if (this.subscriptions != null)
                    hashCode = hashCode * 59 + this.subscriptions.GetHashCode();
                if (this.usage_records != null)
                    hashCode = hashCode * 59 + this.usage_records.GetHashCode();
                if (this.credit_memos != null)
                    hashCode = hashCode * 59 + this.credit_memos.GetHashCode();
                if (this.debit_memos != null)
                    hashCode = hashCode * 59 + this.debit_memos.GetHashCode();
                if (this.invoices != null)
                    hashCode = hashCode * 59 + this.invoices.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {


            // bill_cycle_day (int) maximum
            if(this.bill_cycle_day > (int)31)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for bill_cycle_day, must be a value less than or equal to 31.", new [] { "bill_cycle_day" });
            }

            // bill_cycle_day (int) minimum
            if(this.bill_cycle_day < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for bill_cycle_day, must be a value greater than or equal to 0.", new [] { "bill_cycle_day" });
            }

            yield break;
        }
    }

}
