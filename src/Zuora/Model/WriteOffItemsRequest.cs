/*
 * Quickstart API Reference
 *
 * Zuora Quickstart API is recommended for new customers and integrators, allowing new integrators to swiftly integrate with Zuora. It supports essential business use cases.   To use the Quickstart API, you must have the following features enabled on your tenant:   * [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization)  * [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement)  To find the latest changes made to the Zuora Quickstart API, check the [Quickstart API Changelog](https://www.zuora.com/developer/quickstart-api/changelog/2022q4-changelog/).  We recommend that you subscribe to [Developers Community](https://community.zuora.com/communities/community-home?communitykey=e2a932b4-50c4-4019-a3e8-362e38714df3) to get notifications when a new version is released.  
 *
 * The version of the OpenAPI document: 2023-09-25
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Zuora.Client.OpenAPIDateConverter;

namespace Zuora.Model
{
    /// <summary>
    /// WriteOffItemsRequest
    /// </summary>
    [DataContract]
    public partial class WriteOffItemsRequest :  IEquatable<WriteOffItemsRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WriteOffItemsRequest" /> class.
        /// </summary>
        /// <param name="description">An arbitrary string associated with the object. Often useful for displaying to users..</param>
        /// <param name="deferredRevenueAccount">An active account in your Zuora Chart of Accounts..</param>
        /// <param name="onAccountAccount">An active account in your Zuora Chart of Accounts..</param>
        /// <param name="recognizedRevenueAccount">An active account in your Zuora Chart of Accounts..</param>
        /// <param name="revenueRecognitionRuleName">The name of the revenue recognition rule governing the revenue schedule..</param>
        /// <param name="serviceEnd">The end date of the service period associated with this invoice item. If the price for the associated subscription item is a one-time fee, then this date is the date of that subscription item..</param>
        /// <param name="serviceStart">The start date of the service period associated with this invoice item. If the price for the associated subscription item is a one-time fee, then this date is the date of that subscription item..</param>
        /// <param name="sku">The unique SKU (stock keeping unit) of the product associated with this item..</param>
        /// <param name="unitOfMeasure">Specifies the units used to measure usage..</param>
        /// <param name="id">The unique identifier of the invoice item..</param>
        /// <param name="customFields">Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format..</param>
        public WriteOffItemsRequest(string description = default(string), string deferredRevenueAccount = default(string), string onAccountAccount = default(string), string recognizedRevenueAccount = default(string), string revenueRecognitionRuleName = default(string), DateTime serviceEnd = default(DateTime), DateTime serviceStart = default(DateTime), string sku = default(string), string unitOfMeasure = default(string), string id = default(string), Dictionary<string, Object> customFields = default(Dictionary<string, Object>))
        {
            this.description = description;
            this.deferred_revenue_account = deferredRevenueAccount;
            this.on_account_account = onAccountAccount;
            this.recognized_revenue_account = recognizedRevenueAccount;
            this.revenue_recognition_rule_name = revenueRecognitionRuleName;
            this.service_end = serviceEnd;
            this.service_start = serviceStart;
            this.sku = sku;
            this.unit_of_measure = unitOfMeasure;
            this.id = id;
            this.custom_fields = customFields;
        }

        /// <summary>
        /// An arbitrary string associated with the object. Often useful for displaying to users.
        /// </summary>
        /// <value>An arbitrary string associated with the object. Often useful for displaying to users.</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string description { get; set; }

        /// <summary>
        /// An active account in your Zuora Chart of Accounts.
        /// </summary>
        /// <value>An active account in your Zuora Chart of Accounts.</value>
        [DataMember(Name="deferred_revenue_account", EmitDefaultValue=false)]
        public string deferred_revenue_account { get; set; }

        /// <summary>
        /// An active account in your Zuora Chart of Accounts.
        /// </summary>
        /// <value>An active account in your Zuora Chart of Accounts.</value>
        [DataMember(Name="on_account_account", EmitDefaultValue=false)]
        public string on_account_account { get; set; }

        /// <summary>
        /// An active account in your Zuora Chart of Accounts.
        /// </summary>
        /// <value>An active account in your Zuora Chart of Accounts.</value>
        [DataMember(Name="recognized_revenue_account", EmitDefaultValue=false)]
        public string recognized_revenue_account { get; set; }

        /// <summary>
        /// The name of the revenue recognition rule governing the revenue schedule.
        /// </summary>
        /// <value>The name of the revenue recognition rule governing the revenue schedule.</value>
        [DataMember(Name="revenue_recognition_rule_name", EmitDefaultValue=false)]
        public string revenue_recognition_rule_name { get; set; }

        /// <summary>
        /// The end date of the service period associated with this invoice item. If the price for the associated subscription item is a one-time fee, then this date is the date of that subscription item.
        /// </summary>
        /// <value>The end date of the service period associated with this invoice item. If the price for the associated subscription item is a one-time fee, then this date is the date of that subscription item.</value>
        [DataMember(Name="service_end", EmitDefaultValue=false)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime service_end { get; set; }

        /// <summary>
        /// The start date of the service period associated with this invoice item. If the price for the associated subscription item is a one-time fee, then this date is the date of that subscription item.
        /// </summary>
        /// <value>The start date of the service period associated with this invoice item. If the price for the associated subscription item is a one-time fee, then this date is the date of that subscription item.</value>
        [DataMember(Name="service_start", EmitDefaultValue=false)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime service_start { get; set; }

        /// <summary>
        /// The unique SKU (stock keeping unit) of the product associated with this item.
        /// </summary>
        /// <value>The unique SKU (stock keeping unit) of the product associated with this item.</value>
        [DataMember(Name="sku", EmitDefaultValue=false)]
        public string sku { get; set; }

        /// <summary>
        /// Specifies the units used to measure usage.
        /// </summary>
        /// <value>Specifies the units used to measure usage.</value>
        [DataMember(Name="unit_of_measure", EmitDefaultValue=false)]
        public string unit_of_measure { get; set; }

        /// <summary>
        /// The unique identifier of the invoice item.
        /// </summary>
        /// <value>The unique identifier of the invoice item.</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string id { get; set; }

        /// <summary>
        /// Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format.
        /// </summary>
        /// <value>Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format.</value>
        [DataMember(Name="custom_fields", EmitDefaultValue=false)]
        public Dictionary<string, Object> custom_fields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WriteOffItemsRequest {\n");
            sb.Append("  description: ").Append(description).Append("\n");
            sb.Append("  deferred_revenue_account: ").Append(deferred_revenue_account).Append("\n");
            sb.Append("  on_account_account: ").Append(on_account_account).Append("\n");
            sb.Append("  recognized_revenue_account: ").Append(recognized_revenue_account).Append("\n");
            sb.Append("  revenue_recognition_rule_name: ").Append(revenue_recognition_rule_name).Append("\n");
            sb.Append("  service_end: ").Append(service_end).Append("\n");
            sb.Append("  service_start: ").Append(service_start).Append("\n");
            sb.Append("  sku: ").Append(sku).Append("\n");
            sb.Append("  unit_of_measure: ").Append(unit_of_measure).Append("\n");
            sb.Append("  id: ").Append(id).Append("\n");
            sb.Append("  custom_fields: ").Append(custom_fields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WriteOffItemsRequest);
        }

        /// <summary>
        /// Returns true if WriteOffItemsRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of WriteOffItemsRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WriteOffItemsRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.description == input.description ||
                    (this.description != null &&
                    this.description.Equals(input.description))
                ) && 
                (
                    this.deferred_revenue_account == input.deferred_revenue_account ||
                    (this.deferred_revenue_account != null &&
                    this.deferred_revenue_account.Equals(input.deferred_revenue_account))
                ) && 
                (
                    this.on_account_account == input.on_account_account ||
                    (this.on_account_account != null &&
                    this.on_account_account.Equals(input.on_account_account))
                ) && 
                (
                    this.recognized_revenue_account == input.recognized_revenue_account ||
                    (this.recognized_revenue_account != null &&
                    this.recognized_revenue_account.Equals(input.recognized_revenue_account))
                ) && 
                (
                    this.revenue_recognition_rule_name == input.revenue_recognition_rule_name ||
                    (this.revenue_recognition_rule_name != null &&
                    this.revenue_recognition_rule_name.Equals(input.revenue_recognition_rule_name))
                ) && 
                (
                    this.service_end == input.service_end ||
                    (this.service_end != null &&
                    this.service_end.Equals(input.service_end))
                ) && 
                (
                    this.service_start == input.service_start ||
                    (this.service_start != null &&
                    this.service_start.Equals(input.service_start))
                ) && 
                (
                    this.sku == input.sku ||
                    (this.sku != null &&
                    this.sku.Equals(input.sku))
                ) && 
                (
                    this.unit_of_measure == input.unit_of_measure ||
                    (this.unit_of_measure != null &&
                    this.unit_of_measure.Equals(input.unit_of_measure))
                ) && 
                (
                    this.id == input.id ||
                    (this.id != null &&
                    this.id.Equals(input.id))
                ) && 
                (
                    this.custom_fields == input.custom_fields ||
                    this.custom_fields != null &&
                    input.custom_fields != null &&
                    this.custom_fields.SequenceEqual(input.custom_fields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.description != null)
                    hashCode = hashCode * 59 + this.description.GetHashCode();
                if (this.deferred_revenue_account != null)
                    hashCode = hashCode * 59 + this.deferred_revenue_account.GetHashCode();
                if (this.on_account_account != null)
                    hashCode = hashCode * 59 + this.on_account_account.GetHashCode();
                if (this.recognized_revenue_account != null)
                    hashCode = hashCode * 59 + this.recognized_revenue_account.GetHashCode();
                if (this.revenue_recognition_rule_name != null)
                    hashCode = hashCode * 59 + this.revenue_recognition_rule_name.GetHashCode();
                if (this.service_end != null)
                    hashCode = hashCode * 59 + this.service_end.GetHashCode();
                if (this.service_start != null)
                    hashCode = hashCode * 59 + this.service_start.GetHashCode();
                if (this.sku != null)
                    hashCode = hashCode * 59 + this.sku.GetHashCode();
                if (this.unit_of_measure != null)
                    hashCode = hashCode * 59 + this.unit_of_measure.GetHashCode();
                if (this.id != null)
                    hashCode = hashCode * 59 + this.id.GetHashCode();
                if (this.custom_fields != null)
                    hashCode = hashCode * 59 + this.custom_fields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
