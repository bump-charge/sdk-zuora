/*
 * Quickstart API Reference
 *
 * Zuora Quickstart API is recommended for new customers and integrators, allowing new integrators to swiftly integrate with Zuora. It supports essential business use cases.   To use the Quickstart API, you must have the following features enabled on your tenant:   * [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization)  * [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement)  To find the latest changes made to the Zuora Quickstart API, check the [Quickstart API Changelog](https://www.zuora.com/developer/quickstart-api/changelog/2022q4-changelog/).  We recommend that you subscribe to [Developers Community](https://community.zuora.com/communities/community-home?communitykey=e2a932b4-50c4-4019-a3e8-362e38714df3) to get notifications when a new version is released.  
 *
 * The version of the OpenAPI document: 2023-09-25
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Zuora.Client.OpenAPIDateConverter;

namespace Zuora.Model
{
    /// <summary>
    /// PaymentScheduleCreateRequest
    /// </summary>
    [DataContract]
    public partial class PaymentScheduleCreateRequest :  IEquatable<PaymentScheduleCreateRequest>, IValidatableObject
    {
        /// <summary>
        /// Unit in which term duration is defined. One of week or month.
        /// </summary>
        /// <value>Unit in which term duration is defined. One of week or month.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum PeriodEnum
        {
            /// <summary>
            /// Enum Week for value: week
            /// </summary>
            [EnumMember(Value = "week")]
            Week = 1,

            /// <summary>
            /// Enum Month for value: month
            /// </summary>
            [EnumMember(Value = "month")]
            Month = 2,

            /// <summary>
            /// Enum Biweekly for value: biweekly
            /// </summary>
            [EnumMember(Value = "biweekly")]
            Biweekly = 3

        }

        /// <summary>
        /// Unit in which term duration is defined. One of week or month.
        /// </summary>
        /// <value>Unit in which term duration is defined. One of week or month.</value>
        [DataMember(Name="period", EmitDefaultValue=false)]
        public PeriodEnum? period { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentScheduleCreateRequest" /> class.
        /// </summary>
        /// <param name="accountId">Unique identifier of the customer account the payment schedule belongs to..</param>
        /// <param name="accountNumber">Account number of the customer account the payment schedule belongs to..</param>
        /// <param name="billingDocument">The billing document with which the payment schedule is associated. Note: This field is optional. If you have the Standalone Payment feature enabled, you can leave this field blank and set standalone to true to create standalone payments. You can also choose to create unapplied payments by leaving this object blank and setting standalone to false. If Standalone Payment is not enabled, leaving this object unspecified will create unapplied payments..</param>
        /// <param name="currency">Currency of the payment schedule. Note: This field is optional. The default value is the account&#39;s default currency. This field will be ignored when items is specified..</param>
        /// <param name="description">An arbitrary string attached to the object. Often useful for displaying to users..</param>
        /// <param name="items">Container for payment schedule items..</param>
        /// <param name="paymentGatewayId">ID of the payment gateway used to collect payments. Note: This field is optional. The default value is the account&#39;s default payment gateway ID. If no payment gateway ID is found on the customer account level, the default value will be the tenant&#39;s default payment gateway ID. This field will be ignored when items is specified..</param>
        /// <param name="paymentGatewayNumber">The payment gateway number of the payment gateway used to collect scheduled payments..</param>
        /// <param name="paymentMethodNumber">The payment method number of the payment method to be used to collect payments..</param>
        /// <param name="paymentMethodId">ID of the payment method. Note: This field is optional. The default value is the account&#39;s default payment method ID. This field will be ignored when items is specified..</param>
        /// <param name="paymentScheduleNumber">Number of the payment schedule..</param>
        /// <param name="paymentOptions">Container for the payment options, which describe the transactional level rules for processing payments. Currently, only the gateway_options type is supported. Payment schedule payment_options take precedence over payment schedule item payment_options..</param>
        /// <param name="standalone">Indicates whether the payments created by the payment schedule are standalone payments or not.              When setting to &#x60;true&#x60;, standalone payments will be created.       When setting to &#x60;false&#x60;, you can either specify a billing document, or not specifying any billing documents.       In the latter case, unapplied payments will be created.       If set to &#x60;null&#x60;, standalone payments will be created.              **Note**: This parameter is only available if standalone payments are enabled in your tenant. The default value is &#x60;true&#x60; if standalone payments are enabled in your tenant..</param>
        /// <param name="startDate">The date of the first scheduled payment collection. Note: This parameter is required when &#x60;items&#x60; is not specified. This parameter will be ignored when &#x60;items&#x60; is specified..</param>
        /// <param name="prepayment">Indicates whether the payments created by the payment schedule will be used as reserved payments. This field will only be available if the prepaid cash drawdown permission is enabled. See &lt;a href&#x3D;\&quot;https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Bill_for_usage_or_prepaid_products/Advanced_Consumption_Billing/Prepaid_with_Drawdown\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Prepaid Cash with Drawdown for more information.&lt;/a&gt;.</param>
        /// <param name="period">Unit in which term duration is defined. One of week or month..</param>
        /// <param name="amount">The amount of each payment schedule item in the payment schedule..</param>
        /// <param name="totalAmount">The total amount to be collected by the payment schedule..</param>
        /// <param name="numberOfPayments">The number of payment schedule items to be created for this payment schedule..</param>
        /// <param name="customFields">Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format..</param>
        public PaymentScheduleCreateRequest(string accountId = default(string), string accountNumber = default(string), PaymentScheduleBillingDocumentRequest billingDocument = default(PaymentScheduleBillingDocumentRequest), string currency = default(string), string description = default(string), List<PaymentScheduleItemRequest> items = default(List<PaymentScheduleItemRequest>), string paymentGatewayId = default(string), string paymentGatewayNumber = default(string), string paymentMethodNumber = default(string), string paymentMethodId = default(string), string paymentScheduleNumber = default(string), List<PaymentSchedulePaymentOptionRequest> paymentOptions = default(List<PaymentSchedulePaymentOptionRequest>), bool standalone = default(bool), DateTime startDate = default(DateTime), bool prepayment = default(bool), PeriodEnum? period = default(PeriodEnum?), decimal amount = default(decimal), decimal totalAmount = default(decimal), int numberOfPayments = default(int), Dictionary<string, Object> customFields = default(Dictionary<string, Object>))
        {
            this.billing_document = billingDocument;
            this.account_id = accountId;
            this.account_number = accountNumber;
            this.billing_document = billingDocument;
            this.currency = currency;
            this.description = description;
            this.items = items;
            this.payment_gateway_id = paymentGatewayId;
            this.payment_gateway_number = paymentGatewayNumber;
            this.payment_method_number = paymentMethodNumber;
            this.payment_method_id = paymentMethodId;
            this.payment_schedule_number = paymentScheduleNumber;
            this.payment_options = paymentOptions;
            this.standalone = standalone;
            this.start_date = startDate;
            this.prepayment = prepayment;
            this.period = period;
            this.amount = amount;
            this.total_amount = totalAmount;
            this.number_of_payments = numberOfPayments;
            this.custom_fields = customFields;
        }

        /// <summary>
        /// Unique identifier of the customer account the payment schedule belongs to.
        /// </summary>
        /// <value>Unique identifier of the customer account the payment schedule belongs to.</value>
        [DataMember(Name="account_id", EmitDefaultValue=false)]
        public string account_id { get; set; }

        /// <summary>
        /// Account number of the customer account the payment schedule belongs to.
        /// </summary>
        /// <value>Account number of the customer account the payment schedule belongs to.</value>
        [DataMember(Name="account_number", EmitDefaultValue=false)]
        public string account_number { get; set; }

        /// <summary>
        /// The billing document with which the payment schedule is associated. Note: This field is optional. If you have the Standalone Payment feature enabled, you can leave this field blank and set standalone to true to create standalone payments. You can also choose to create unapplied payments by leaving this object blank and setting standalone to false. If Standalone Payment is not enabled, leaving this object unspecified will create unapplied payments.
        /// </summary>
        /// <value>The billing document with which the payment schedule is associated. Note: This field is optional. If you have the Standalone Payment feature enabled, you can leave this field blank and set standalone to true to create standalone payments. You can also choose to create unapplied payments by leaving this object blank and setting standalone to false. If Standalone Payment is not enabled, leaving this object unspecified will create unapplied payments.</value>
        [DataMember(Name="billing_document", EmitDefaultValue=true)]
        public PaymentScheduleBillingDocumentRequest billing_document { get; set; }

        /// <summary>
        /// Currency of the payment schedule. Note: This field is optional. The default value is the account&#39;s default currency. This field will be ignored when items is specified.
        /// </summary>
        /// <value>Currency of the payment schedule. Note: This field is optional. The default value is the account&#39;s default currency. This field will be ignored when items is specified.</value>
        [DataMember(Name="currency", EmitDefaultValue=false)]
        public string currency { get; set; }

        /// <summary>
        /// An arbitrary string attached to the object. Often useful for displaying to users.
        /// </summary>
        /// <value>An arbitrary string attached to the object. Often useful for displaying to users.</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string description { get; set; }

        /// <summary>
        /// Container for payment schedule items.
        /// </summary>
        /// <value>Container for payment schedule items.</value>
        [DataMember(Name="items", EmitDefaultValue=false)]
        public List<PaymentScheduleItemRequest> items { get; set; }

        /// <summary>
        /// ID of the payment gateway used to collect payments. Note: This field is optional. The default value is the account&#39;s default payment gateway ID. If no payment gateway ID is found on the customer account level, the default value will be the tenant&#39;s default payment gateway ID. This field will be ignored when items is specified.
        /// </summary>
        /// <value>ID of the payment gateway used to collect payments. Note: This field is optional. The default value is the account&#39;s default payment gateway ID. If no payment gateway ID is found on the customer account level, the default value will be the tenant&#39;s default payment gateway ID. This field will be ignored when items is specified.</value>
        [DataMember(Name="payment_gateway_id", EmitDefaultValue=false)]
        public string payment_gateway_id { get; set; }

        /// <summary>
        /// The payment gateway number of the payment gateway used to collect scheduled payments.
        /// </summary>
        /// <value>The payment gateway number of the payment gateway used to collect scheduled payments.</value>
        [DataMember(Name="payment_gateway_number", EmitDefaultValue=false)]
        public string payment_gateway_number { get; set; }

        /// <summary>
        /// The payment method number of the payment method to be used to collect payments.
        /// </summary>
        /// <value>The payment method number of the payment method to be used to collect payments.</value>
        [DataMember(Name="payment_method_number", EmitDefaultValue=false)]
        public string payment_method_number { get; set; }

        /// <summary>
        /// ID of the payment method. Note: This field is optional. The default value is the account&#39;s default payment method ID. This field will be ignored when items is specified.
        /// </summary>
        /// <value>ID of the payment method. Note: This field is optional. The default value is the account&#39;s default payment method ID. This field will be ignored when items is specified.</value>
        [DataMember(Name="payment_method_id", EmitDefaultValue=false)]
        public string payment_method_id { get; set; }

        /// <summary>
        /// Number of the payment schedule.
        /// </summary>
        /// <value>Number of the payment schedule.</value>
        [DataMember(Name="payment_schedule_number", EmitDefaultValue=false)]
        public string payment_schedule_number { get; set; }

        /// <summary>
        /// Container for the payment options, which describe the transactional level rules for processing payments. Currently, only the gateway_options type is supported. Payment schedule payment_options take precedence over payment schedule item payment_options.
        /// </summary>
        /// <value>Container for the payment options, which describe the transactional level rules for processing payments. Currently, only the gateway_options type is supported. Payment schedule payment_options take precedence over payment schedule item payment_options.</value>
        [DataMember(Name="payment_options", EmitDefaultValue=false)]
        public List<PaymentSchedulePaymentOptionRequest> payment_options { get; set; }

        /// <summary>
        /// Indicates whether the payments created by the payment schedule are standalone payments or not.              When setting to &#x60;true&#x60;, standalone payments will be created.       When setting to &#x60;false&#x60;, you can either specify a billing document, or not specifying any billing documents.       In the latter case, unapplied payments will be created.       If set to &#x60;null&#x60;, standalone payments will be created.              **Note**: This parameter is only available if standalone payments are enabled in your tenant. The default value is &#x60;true&#x60; if standalone payments are enabled in your tenant.
        /// </summary>
        /// <value>Indicates whether the payments created by the payment schedule are standalone payments or not.              When setting to &#x60;true&#x60;, standalone payments will be created.       When setting to &#x60;false&#x60;, you can either specify a billing document, or not specifying any billing documents.       In the latter case, unapplied payments will be created.       If set to &#x60;null&#x60;, standalone payments will be created.              **Note**: This parameter is only available if standalone payments are enabled in your tenant. The default value is &#x60;true&#x60; if standalone payments are enabled in your tenant.</value>
        [DataMember(Name="standalone", EmitDefaultValue=false)]
        public bool standalone { get; set; }

        /// <summary>
        /// The date of the first scheduled payment collection. Note: This parameter is required when &#x60;items&#x60; is not specified. This parameter will be ignored when &#x60;items&#x60; is specified.
        /// </summary>
        /// <value>The date of the first scheduled payment collection. Note: This parameter is required when &#x60;items&#x60; is not specified. This parameter will be ignored when &#x60;items&#x60; is specified.</value>
        [DataMember(Name="start_date", EmitDefaultValue=false)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime start_date { get; set; }

        /// <summary>
        /// Indicates whether the payments created by the payment schedule will be used as reserved payments. This field will only be available if the prepaid cash drawdown permission is enabled. See &lt;a href&#x3D;\&quot;https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Bill_for_usage_or_prepaid_products/Advanced_Consumption_Billing/Prepaid_with_Drawdown\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Prepaid Cash with Drawdown for more information.&lt;/a&gt;
        /// </summary>
        /// <value>Indicates whether the payments created by the payment schedule will be used as reserved payments. This field will only be available if the prepaid cash drawdown permission is enabled. See &lt;a href&#x3D;\&quot;https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Bill_for_usage_or_prepaid_products/Advanced_Consumption_Billing/Prepaid_with_Drawdown\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Prepaid Cash with Drawdown for more information.&lt;/a&gt;</value>
        [DataMember(Name="prepayment", EmitDefaultValue=false)]
        public bool prepayment { get; set; }


        /// <summary>
        /// The amount of each payment schedule item in the payment schedule.
        /// </summary>
        /// <value>The amount of each payment schedule item in the payment schedule.</value>
        [DataMember(Name="amount", EmitDefaultValue=false)]
        public decimal amount { get; set; }

        /// <summary>
        /// The total amount to be collected by the payment schedule.
        /// </summary>
        /// <value>The total amount to be collected by the payment schedule.</value>
        [DataMember(Name="total_amount", EmitDefaultValue=false)]
        public decimal total_amount { get; set; }

        /// <summary>
        /// The number of payment schedule items to be created for this payment schedule.
        /// </summary>
        /// <value>The number of payment schedule items to be created for this payment schedule.</value>
        [DataMember(Name="number_of_payments", EmitDefaultValue=false)]
        public int number_of_payments { get; set; }

        /// <summary>
        /// Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format.
        /// </summary>
        /// <value>Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format.</value>
        [DataMember(Name="custom_fields", EmitDefaultValue=false)]
        public Dictionary<string, Object> custom_fields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PaymentScheduleCreateRequest {\n");
            sb.Append("  account_id: ").Append(account_id).Append("\n");
            sb.Append("  account_number: ").Append(account_number).Append("\n");
            sb.Append("  billing_document: ").Append(billing_document).Append("\n");
            sb.Append("  currency: ").Append(currency).Append("\n");
            sb.Append("  description: ").Append(description).Append("\n");
            sb.Append("  items: ").Append(items).Append("\n");
            sb.Append("  payment_gateway_id: ").Append(payment_gateway_id).Append("\n");
            sb.Append("  payment_gateway_number: ").Append(payment_gateway_number).Append("\n");
            sb.Append("  payment_method_number: ").Append(payment_method_number).Append("\n");
            sb.Append("  payment_method_id: ").Append(payment_method_id).Append("\n");
            sb.Append("  payment_schedule_number: ").Append(payment_schedule_number).Append("\n");
            sb.Append("  payment_options: ").Append(payment_options).Append("\n");
            sb.Append("  standalone: ").Append(standalone).Append("\n");
            sb.Append("  start_date: ").Append(start_date).Append("\n");
            sb.Append("  prepayment: ").Append(prepayment).Append("\n");
            sb.Append("  period: ").Append(period).Append("\n");
            sb.Append("  amount: ").Append(amount).Append("\n");
            sb.Append("  total_amount: ").Append(total_amount).Append("\n");
            sb.Append("  number_of_payments: ").Append(number_of_payments).Append("\n");
            sb.Append("  custom_fields: ").Append(custom_fields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PaymentScheduleCreateRequest);
        }

        /// <summary>
        /// Returns true if PaymentScheduleCreateRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of PaymentScheduleCreateRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PaymentScheduleCreateRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.account_id == input.account_id ||
                    (this.account_id != null &&
                    this.account_id.Equals(input.account_id))
                ) && 
                (
                    this.account_number == input.account_number ||
                    (this.account_number != null &&
                    this.account_number.Equals(input.account_number))
                ) && 
                (
                    this.billing_document == input.billing_document ||
                    (this.billing_document != null &&
                    this.billing_document.Equals(input.billing_document))
                ) && 
                (
                    this.currency == input.currency ||
                    (this.currency != null &&
                    this.currency.Equals(input.currency))
                ) && 
                (
                    this.description == input.description ||
                    (this.description != null &&
                    this.description.Equals(input.description))
                ) && 
                (
                    this.items == input.items ||
                    this.items != null &&
                    input.items != null &&
                    this.items.SequenceEqual(input.items)
                ) && 
                (
                    this.payment_gateway_id == input.payment_gateway_id ||
                    (this.payment_gateway_id != null &&
                    this.payment_gateway_id.Equals(input.payment_gateway_id))
                ) && 
                (
                    this.payment_gateway_number == input.payment_gateway_number ||
                    (this.payment_gateway_number != null &&
                    this.payment_gateway_number.Equals(input.payment_gateway_number))
                ) && 
                (
                    this.payment_method_number == input.payment_method_number ||
                    (this.payment_method_number != null &&
                    this.payment_method_number.Equals(input.payment_method_number))
                ) && 
                (
                    this.payment_method_id == input.payment_method_id ||
                    (this.payment_method_id != null &&
                    this.payment_method_id.Equals(input.payment_method_id))
                ) && 
                (
                    this.payment_schedule_number == input.payment_schedule_number ||
                    (this.payment_schedule_number != null &&
                    this.payment_schedule_number.Equals(input.payment_schedule_number))
                ) && 
                (
                    this.payment_options == input.payment_options ||
                    this.payment_options != null &&
                    input.payment_options != null &&
                    this.payment_options.SequenceEqual(input.payment_options)
                ) && 
                (
                    this.standalone == input.standalone ||
                    (this.standalone != null &&
                    this.standalone.Equals(input.standalone))
                ) && 
                (
                    this.start_date == input.start_date ||
                    (this.start_date != null &&
                    this.start_date.Equals(input.start_date))
                ) && 
                (
                    this.prepayment == input.prepayment ||
                    (this.prepayment != null &&
                    this.prepayment.Equals(input.prepayment))
                ) && 
                (
                    this.period == input.period ||
                    (this.period != null &&
                    this.period.Equals(input.period))
                ) && 
                (
                    this.amount == input.amount ||
                    (this.amount != null &&
                    this.amount.Equals(input.amount))
                ) && 
                (
                    this.total_amount == input.total_amount ||
                    (this.total_amount != null &&
                    this.total_amount.Equals(input.total_amount))
                ) && 
                (
                    this.number_of_payments == input.number_of_payments ||
                    (this.number_of_payments != null &&
                    this.number_of_payments.Equals(input.number_of_payments))
                ) && 
                (
                    this.custom_fields == input.custom_fields ||
                    this.custom_fields != null &&
                    input.custom_fields != null &&
                    this.custom_fields.SequenceEqual(input.custom_fields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.account_id != null)
                    hashCode = hashCode * 59 + this.account_id.GetHashCode();
                if (this.account_number != null)
                    hashCode = hashCode * 59 + this.account_number.GetHashCode();
                if (this.billing_document != null)
                    hashCode = hashCode * 59 + this.billing_document.GetHashCode();
                if (this.currency != null)
                    hashCode = hashCode * 59 + this.currency.GetHashCode();
                if (this.description != null)
                    hashCode = hashCode * 59 + this.description.GetHashCode();
                if (this.items != null)
                    hashCode = hashCode * 59 + this.items.GetHashCode();
                if (this.payment_gateway_id != null)
                    hashCode = hashCode * 59 + this.payment_gateway_id.GetHashCode();
                if (this.payment_gateway_number != null)
                    hashCode = hashCode * 59 + this.payment_gateway_number.GetHashCode();
                if (this.payment_method_number != null)
                    hashCode = hashCode * 59 + this.payment_method_number.GetHashCode();
                if (this.payment_method_id != null)
                    hashCode = hashCode * 59 + this.payment_method_id.GetHashCode();
                if (this.payment_schedule_number != null)
                    hashCode = hashCode * 59 + this.payment_schedule_number.GetHashCode();
                if (this.payment_options != null)
                    hashCode = hashCode * 59 + this.payment_options.GetHashCode();
                if (this.standalone != null)
                    hashCode = hashCode * 59 + this.standalone.GetHashCode();
                if (this.start_date != null)
                    hashCode = hashCode * 59 + this.start_date.GetHashCode();
                if (this.prepayment != null)
                    hashCode = hashCode * 59 + this.prepayment.GetHashCode();
                if (this.period != null)
                    hashCode = hashCode * 59 + this.period.GetHashCode();
                if (this.amount != null)
                    hashCode = hashCode * 59 + this.amount.GetHashCode();
                if (this.total_amount != null)
                    hashCode = hashCode * 59 + this.total_amount.GetHashCode();
                if (this.number_of_payments != null)
                    hashCode = hashCode * 59 + this.number_of_payments.GetHashCode();
                if (this.custom_fields != null)
                    hashCode = hashCode * 59 + this.custom_fields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
