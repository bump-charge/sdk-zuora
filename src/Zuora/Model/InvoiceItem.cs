/*
 * Quickstart API Reference
 *
 * Zuora Quickstart API is recommended for new customers and integrators, allowing new integrators to swiftly integrate with Zuora. It supports essential business use cases.   To use the Quickstart API, you must have the following features enabled on your tenant:   * [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization)  * [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement)  To find the latest changes made to the Zuora Quickstart API, check the [Quickstart API Changelog](https://www.zuora.com/developer/quickstart-api/changelog/2022q4-changelog/).  We recommend that you subscribe to [Developers Community](https://community.zuora.com/communities/community-home?communitykey=e2a932b4-50c4-4019-a3e8-362e38714df3) to get notifications when a new version is released.  
 *
 * The version of the OpenAPI document: 2023-09-25
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Zuora.Client.OpenAPIDateConverter;

namespace Zuora.Model
{
    /// <summary>
    /// InvoiceItem
    /// </summary>
    [DataContract]
    public partial class InvoiceItem :  IEquatable<InvoiceItem>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InvoiceItem" /> class.
        /// </summary>
        /// <param name="customFields">Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format..</param>
        /// <param name="amount">The total amount of this invoice item..</param>
        /// <param name="description">An arbitrary string associated with the object. Often useful for displaying to users..</param>
        /// <param name="deferredRevenueAccount">The accounting code for the deferred revenue, such as Monthly Recurring Liability..</param>
        /// <param name="recognizedRevenueAccount">The accounting code for the recognized revenue, such as Monthly Recurring Charges or Overage Charges..</param>
        /// <param name="revenueRecognitionRuleName">The name of the revenue recognition rule governing the revenue schedule..</param>
        /// <param name="quantity">The number of units of this item..</param>
        /// <param name="serviceEnd">The end date of the service period associated with this invoice item. If the associated charge is a one-time fee, then this date is the date of that charge..</param>
        /// <param name="accountsReceivableAccount">An active account in your Zuora Chart of Accounts..</param>
        /// <param name="discountItem">If true, indicates that the item is a discount item..</param>
        /// <param name="appliedToItemId">Identifier of an invoice item or a debit memo item that this discount item or credit memo item is applied to..</param>
        /// <param name="serviceStart">The start date of the service period associated with this invoice item. If the associated charge is a one-time fee, then this date is the date of that charge..</param>
        /// <param name="accountingCode">accountingCode.</param>
        /// <param name="invoiceId">The identifier of the invoice associated with this invoice item..</param>
        /// <param name="sku">The unique SKU (stock keeping unit) of the product associated with this item..</param>
        /// <param name="subscriptionId">The identifier of the subscription associated with the invoice item..</param>
        /// <param name="taxInclusive">This specifies if the invoice item amount is inclusive or exclusive of tax..</param>
        /// <param name="remainingBalance">The remaining balance of this invoice item..</param>
        /// <param name="unitOfMeasure">Specifies the units used to measure usage..</param>
        /// <param name="unitAmount">Unit amount (in the currency specified) of the invoice item..</param>
        /// <param name="bookingReference">The booking reference for this invoice item..</param>
        /// <param name="name">Name of the invoice item displayed to customers on billing documents..</param>
        /// <param name="priceId">The identifier of the price this invoice item is associated with..</param>
        /// <param name="purchaseOrderNumber">The purchase order number associated with this invoice item..</param>
        /// <param name="tax">The amount of tax applied to the invoice item..</param>
        /// <param name="taxCode">The designated tax code..</param>
        /// <param name="subscriptionItemId">The identifier the subscription item associated with this invoice item..</param>
        /// <param name="taxationItems">taxationItems.</param>
        /// <param name="invoice">The invoice the item belongs to. EXPANDABLE.</param>
        /// <param name="lineItem">The order line item associated with this invoice item. EXPANDABLE.</param>
        /// <param name="subscriptionItem">The expandable subscription item associated with this billing document item..</param>
        public InvoiceItem(Dictionary<string, Object> customFields = default(Dictionary<string, Object>), decimal amount = default(decimal), string description = default(string), string deferredRevenueAccount = default(string), string recognizedRevenueAccount = default(string), string revenueRecognitionRuleName = default(string), decimal quantity = default(decimal), string serviceEnd = default(string), string accountsReceivableAccount = default(string), bool discountItem = default(bool), string appliedToItemId = default(string), string serviceStart = default(string), string accountingCode = default(string), string invoiceId = default(string), string sku = default(string), string subscriptionId = default(string), bool taxInclusive = default(bool), decimal remainingBalance = default(decimal), string unitOfMeasure = default(string), decimal unitAmount = default(decimal), string bookingReference = default(string), string name = default(string), string priceId = default(string), string purchaseOrderNumber = default(string), decimal tax = default(decimal), string taxCode = default(string), string subscriptionItemId = default(string), TaxationItemListResponse taxationItems = default(TaxationItemListResponse), Invoice invoice = default(Invoice), LineItem lineItem = default(LineItem), SubscriptionItem subscriptionItem = default(SubscriptionItem))
        {
            this.invoice = invoice;
            this.line_item = lineItem;
            this.subscription_item = subscriptionItem;
            this.custom_fields = customFields;
            this.amount = amount;
            this.description = description;
            this.deferred_revenue_account = deferredRevenueAccount;
            this.recognized_revenue_account = recognizedRevenueAccount;
            this.revenue_recognition_rule_name = revenueRecognitionRuleName;
            this.quantity = quantity;
            this.service_end = serviceEnd;
            this.accounts_receivable_account = accountsReceivableAccount;
            this.discount_item = discountItem;
            this.applied_to_item_id = appliedToItemId;
            this.service_start = serviceStart;
            this.accounting_code = accountingCode;
            this.invoice_id = invoiceId;
            this.sku = sku;
            this.subscription_id = subscriptionId;
            this.tax_inclusive = taxInclusive;
            this.remaining_balance = remainingBalance;
            this.unit_of_measure = unitOfMeasure;
            this.unit_amount = unitAmount;
            this.booking_reference = bookingReference;
            this.name = name;
            this.price_id = priceId;
            this.purchase_order_number = purchaseOrderNumber;
            this.tax = tax;
            this.tax_code = taxCode;
            this.subscription_item_id = subscriptionItemId;
            this.taxation_items = taxationItems;
            this.invoice = invoice;
            this.line_item = lineItem;
            this.subscription_item = subscriptionItem;
        }

        /// <summary>
        /// Unique identifier for the object.
        /// </summary>
        /// <value>Unique identifier for the object.</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string id { get; private set; }

        /// <summary>
        /// Unique identifier of the Zuora user who last updated the object
        /// </summary>
        /// <value>Unique identifier of the Zuora user who last updated the object</value>
        [DataMember(Name="updated_by_id", EmitDefaultValue=false)]
        public string updated_by_id { get; private set; }

        /// <summary>
        /// The date and time when the object was last updated in ISO 8601 UTC format.
        /// </summary>
        /// <value>The date and time when the object was last updated in ISO 8601 UTC format.</value>
        [DataMember(Name="updated_time", EmitDefaultValue=false)]
        public DateTime updated_time { get; private set; }

        /// <summary>
        /// Unique identifier of the Zuora user who created the object
        /// </summary>
        /// <value>Unique identifier of the Zuora user who created the object</value>
        [DataMember(Name="created_by_id", EmitDefaultValue=false)]
        public string created_by_id { get; private set; }

        /// <summary>
        /// The date and time when the object was created in ISO 8601 UTC format.
        /// </summary>
        /// <value>The date and time when the object was created in ISO 8601 UTC format.</value>
        [DataMember(Name="created_time", EmitDefaultValue=false)]
        public DateTime created_time { get; private set; }

        /// <summary>
        /// Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format.
        /// </summary>
        /// <value>Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format.</value>
        [DataMember(Name="custom_fields", EmitDefaultValue=false)]
        public Dictionary<string, Object> custom_fields { get; set; }

        /// <summary>
        /// The custom fields associated with an object. For more information about custom fields, see [Manage custom fields](https://knowledgecenter.zuora.com/Central_Platform/Manage_Custom_Fields).
        /// </summary>
        /// <value>The custom fields associated with an object. For more information about custom fields, see [Manage custom fields](https://knowledgecenter.zuora.com/Central_Platform/Manage_Custom_Fields).</value>
        [DataMember(Name="custom_objects", EmitDefaultValue=false)]
        public Dictionary<string, Object> custom_objects { get; private set; }

        /// <summary>
        /// The total amount of this invoice item.
        /// </summary>
        /// <value>The total amount of this invoice item.</value>
        [DataMember(Name="amount", EmitDefaultValue=false)]
        public decimal amount { get; set; }

        /// <summary>
        /// An arbitrary string associated with the object. Often useful for displaying to users.
        /// </summary>
        /// <value>An arbitrary string associated with the object. Often useful for displaying to users.</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string description { get; set; }

        /// <summary>
        /// The accounting code for the deferred revenue, such as Monthly Recurring Liability.
        /// </summary>
        /// <value>The accounting code for the deferred revenue, such as Monthly Recurring Liability.</value>
        [DataMember(Name="deferred_revenue_account", EmitDefaultValue=false)]
        public string deferred_revenue_account { get; set; }

        /// <summary>
        /// The accounting code for the recognized revenue, such as Monthly Recurring Charges or Overage Charges.
        /// </summary>
        /// <value>The accounting code for the recognized revenue, such as Monthly Recurring Charges or Overage Charges.</value>
        [DataMember(Name="recognized_revenue_account", EmitDefaultValue=false)]
        public string recognized_revenue_account { get; set; }

        /// <summary>
        /// The name of the revenue recognition rule governing the revenue schedule.
        /// </summary>
        /// <value>The name of the revenue recognition rule governing the revenue schedule.</value>
        [DataMember(Name="revenue_recognition_rule_name", EmitDefaultValue=false)]
        public string revenue_recognition_rule_name { get; set; }

        /// <summary>
        /// The number of units of this item.
        /// </summary>
        /// <value>The number of units of this item.</value>
        [DataMember(Name="quantity", EmitDefaultValue=false)]
        public decimal quantity { get; set; }

        /// <summary>
        /// The end date of the service period associated with this invoice item. If the associated charge is a one-time fee, then this date is the date of that charge.
        /// </summary>
        /// <value>The end date of the service period associated with this invoice item. If the associated charge is a one-time fee, then this date is the date of that charge.</value>
        [DataMember(Name="service_end", EmitDefaultValue=false)]
        public string service_end { get; set; }

        /// <summary>
        /// An active account in your Zuora Chart of Accounts.
        /// </summary>
        /// <value>An active account in your Zuora Chart of Accounts.</value>
        [DataMember(Name="accounts_receivable_account", EmitDefaultValue=false)]
        public string accounts_receivable_account { get; set; }

        /// <summary>
        /// If true, indicates that the item is a discount item.
        /// </summary>
        /// <value>If true, indicates that the item is a discount item.</value>
        [DataMember(Name="discount_item", EmitDefaultValue=false)]
        public bool discount_item { get; set; }

        /// <summary>
        /// Identifier of an invoice item or a debit memo item that this discount item or credit memo item is applied to.
        /// </summary>
        /// <value>Identifier of an invoice item or a debit memo item that this discount item or credit memo item is applied to.</value>
        [DataMember(Name="applied_to_item_id", EmitDefaultValue=false)]
        public string applied_to_item_id { get; set; }

        /// <summary>
        /// The start date of the service period associated with this invoice item. If the associated charge is a one-time fee, then this date is the date of that charge.
        /// </summary>
        /// <value>The start date of the service period associated with this invoice item. If the associated charge is a one-time fee, then this date is the date of that charge.</value>
        [DataMember(Name="service_start", EmitDefaultValue=false)]
        public string service_start { get; set; }

        /// <summary>
        /// Gets or Sets accounting_code
        /// </summary>
        [DataMember(Name="accounting_code", EmitDefaultValue=false)]
        public string accounting_code { get; set; }

        /// <summary>
        /// The identifier of the invoice associated with this invoice item.
        /// </summary>
        /// <value>The identifier of the invoice associated with this invoice item.</value>
        [DataMember(Name="invoice_id", EmitDefaultValue=false)]
        public string invoice_id { get; set; }

        /// <summary>
        /// The unique SKU (stock keeping unit) of the product associated with this item.
        /// </summary>
        /// <value>The unique SKU (stock keeping unit) of the product associated with this item.</value>
        [DataMember(Name="sku", EmitDefaultValue=false)]
        public string sku { get; set; }

        /// <summary>
        /// The identifier of the subscription associated with the invoice item.
        /// </summary>
        /// <value>The identifier of the subscription associated with the invoice item.</value>
        [DataMember(Name="subscription_id", EmitDefaultValue=false)]
        public string subscription_id { get; set; }

        /// <summary>
        /// This specifies if the invoice item amount is inclusive or exclusive of tax.
        /// </summary>
        /// <value>This specifies if the invoice item amount is inclusive or exclusive of tax.</value>
        [DataMember(Name="tax_inclusive", EmitDefaultValue=false)]
        public bool tax_inclusive { get; set; }

        /// <summary>
        /// The remaining balance of this invoice item.
        /// </summary>
        /// <value>The remaining balance of this invoice item.</value>
        [DataMember(Name="remaining_balance", EmitDefaultValue=false)]
        public decimal remaining_balance { get; set; }

        /// <summary>
        /// Specifies the units used to measure usage.
        /// </summary>
        /// <value>Specifies the units used to measure usage.</value>
        [DataMember(Name="unit_of_measure", EmitDefaultValue=false)]
        public string unit_of_measure { get; set; }

        /// <summary>
        /// Unit amount (in the currency specified) of the invoice item.
        /// </summary>
        /// <value>Unit amount (in the currency specified) of the invoice item.</value>
        [DataMember(Name="unit_amount", EmitDefaultValue=false)]
        public decimal unit_amount { get; set; }

        /// <summary>
        /// The booking reference for this invoice item.
        /// </summary>
        /// <value>The booking reference for this invoice item.</value>
        [DataMember(Name="booking_reference", EmitDefaultValue=false)]
        public string booking_reference { get; set; }

        /// <summary>
        /// Name of the invoice item displayed to customers on billing documents.
        /// </summary>
        /// <value>Name of the invoice item displayed to customers on billing documents.</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string name { get; set; }

        /// <summary>
        /// The date and time when the invoice item was created in ISO 8601 UTC format.
        /// </summary>
        /// <value>The date and time when the invoice item was created in ISO 8601 UTC format.</value>
        [DataMember(Name="document_item_date", EmitDefaultValue=false)]
        public DateTime document_item_date { get; private set; }

        /// <summary>
        /// The identifier of the price this invoice item is associated with.
        /// </summary>
        /// <value>The identifier of the price this invoice item is associated with.</value>
        [DataMember(Name="price_id", EmitDefaultValue=false)]
        public string price_id { get; set; }

        /// <summary>
        /// The purchase order number associated with this invoice item.
        /// </summary>
        /// <value>The purchase order number associated with this invoice item.</value>
        [DataMember(Name="purchase_order_number", EmitDefaultValue=false)]
        public string purchase_order_number { get; set; }

        /// <summary>
        /// The amount of tax applied to the invoice item.
        /// </summary>
        /// <value>The amount of tax applied to the invoice item.</value>
        [DataMember(Name="tax", EmitDefaultValue=false)]
        public decimal tax { get; set; }

        /// <summary>
        /// The designated tax code.
        /// </summary>
        /// <value>The designated tax code.</value>
        [DataMember(Name="tax_code", EmitDefaultValue=false)]
        public string tax_code { get; set; }

        /// <summary>
        /// The identifier the subscription item associated with this invoice item.
        /// </summary>
        /// <value>The identifier the subscription item associated with this invoice item.</value>
        [DataMember(Name="subscription_item_id", EmitDefaultValue=false)]
        public string subscription_item_id { get; set; }

        /// <summary>
        /// Gets or Sets taxation_items
        /// </summary>
        [DataMember(Name="taxation_items", EmitDefaultValue=false)]
        public TaxationItemListResponse taxation_items { get; set; }

        /// <summary>
        /// The invoice the item belongs to. EXPANDABLE
        /// </summary>
        /// <value>The invoice the item belongs to. EXPANDABLE</value>
        [DataMember(Name="invoice", EmitDefaultValue=true)]
        public Invoice invoice { get; set; }

        /// <summary>
        /// The order line item associated with this invoice item. EXPANDABLE
        /// </summary>
        /// <value>The order line item associated with this invoice item. EXPANDABLE</value>
        [DataMember(Name="line_item", EmitDefaultValue=true)]
        public LineItem line_item { get; set; }

        /// <summary>
        /// List of customer subscriptions.
        /// </summary>
        /// <value>List of customer subscriptions.</value>
        [DataMember(Name="subscription", EmitDefaultValue=true)]
        public Subscription subscription { get; private set; }

        /// <summary>
        /// The expandable subscription item associated with this billing document item.
        /// </summary>
        /// <value>The expandable subscription item associated with this billing document item.</value>
        [DataMember(Name="subscription_item", EmitDefaultValue=true)]
        public SubscriptionItem subscription_item { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InvoiceItem {\n");
            sb.Append("  id: ").Append(id).Append("\n");
            sb.Append("  updated_by_id: ").Append(updated_by_id).Append("\n");
            sb.Append("  updated_time: ").Append(updated_time).Append("\n");
            sb.Append("  created_by_id: ").Append(created_by_id).Append("\n");
            sb.Append("  created_time: ").Append(created_time).Append("\n");
            sb.Append("  custom_fields: ").Append(custom_fields).Append("\n");
            sb.Append("  custom_objects: ").Append(custom_objects).Append("\n");
            sb.Append("  amount: ").Append(amount).Append("\n");
            sb.Append("  description: ").Append(description).Append("\n");
            sb.Append("  deferred_revenue_account: ").Append(deferred_revenue_account).Append("\n");
            sb.Append("  recognized_revenue_account: ").Append(recognized_revenue_account).Append("\n");
            sb.Append("  revenue_recognition_rule_name: ").Append(revenue_recognition_rule_name).Append("\n");
            sb.Append("  quantity: ").Append(quantity).Append("\n");
            sb.Append("  service_end: ").Append(service_end).Append("\n");
            sb.Append("  accounts_receivable_account: ").Append(accounts_receivable_account).Append("\n");
            sb.Append("  discount_item: ").Append(discount_item).Append("\n");
            sb.Append("  applied_to_item_id: ").Append(applied_to_item_id).Append("\n");
            sb.Append("  service_start: ").Append(service_start).Append("\n");
            sb.Append("  accounting_code: ").Append(accounting_code).Append("\n");
            sb.Append("  invoice_id: ").Append(invoice_id).Append("\n");
            sb.Append("  sku: ").Append(sku).Append("\n");
            sb.Append("  subscription_id: ").Append(subscription_id).Append("\n");
            sb.Append("  tax_inclusive: ").Append(tax_inclusive).Append("\n");
            sb.Append("  remaining_balance: ").Append(remaining_balance).Append("\n");
            sb.Append("  unit_of_measure: ").Append(unit_of_measure).Append("\n");
            sb.Append("  unit_amount: ").Append(unit_amount).Append("\n");
            sb.Append("  booking_reference: ").Append(booking_reference).Append("\n");
            sb.Append("  name: ").Append(name).Append("\n");
            sb.Append("  document_item_date: ").Append(document_item_date).Append("\n");
            sb.Append("  price_id: ").Append(price_id).Append("\n");
            sb.Append("  purchase_order_number: ").Append(purchase_order_number).Append("\n");
            sb.Append("  tax: ").Append(tax).Append("\n");
            sb.Append("  tax_code: ").Append(tax_code).Append("\n");
            sb.Append("  subscription_item_id: ").Append(subscription_item_id).Append("\n");
            sb.Append("  taxation_items: ").Append(taxation_items).Append("\n");
            sb.Append("  invoice: ").Append(invoice).Append("\n");
            sb.Append("  line_item: ").Append(line_item).Append("\n");
            sb.Append("  subscription: ").Append(subscription).Append("\n");
            sb.Append("  subscription_item: ").Append(subscription_item).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InvoiceItem);
        }

        /// <summary>
        /// Returns true if InvoiceItem instances are equal
        /// </summary>
        /// <param name="input">Instance of InvoiceItem to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InvoiceItem input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.id == input.id ||
                    (this.id != null &&
                    this.id.Equals(input.id))
                ) && 
                (
                    this.updated_by_id == input.updated_by_id ||
                    (this.updated_by_id != null &&
                    this.updated_by_id.Equals(input.updated_by_id))
                ) && 
                (
                    this.updated_time == input.updated_time ||
                    (this.updated_time != null &&
                    this.updated_time.Equals(input.updated_time))
                ) && 
                (
                    this.created_by_id == input.created_by_id ||
                    (this.created_by_id != null &&
                    this.created_by_id.Equals(input.created_by_id))
                ) && 
                (
                    this.created_time == input.created_time ||
                    (this.created_time != null &&
                    this.created_time.Equals(input.created_time))
                ) && 
                (
                    this.custom_fields == input.custom_fields ||
                    this.custom_fields != null &&
                    input.custom_fields != null &&
                    this.custom_fields.SequenceEqual(input.custom_fields)
                ) && 
                (
                    this.custom_objects == input.custom_objects ||
                    this.custom_objects != null &&
                    input.custom_objects != null &&
                    this.custom_objects.SequenceEqual(input.custom_objects)
                ) && 
                (
                    this.amount == input.amount ||
                    (this.amount != null &&
                    this.amount.Equals(input.amount))
                ) && 
                (
                    this.description == input.description ||
                    (this.description != null &&
                    this.description.Equals(input.description))
                ) && 
                (
                    this.deferred_revenue_account == input.deferred_revenue_account ||
                    (this.deferred_revenue_account != null &&
                    this.deferred_revenue_account.Equals(input.deferred_revenue_account))
                ) && 
                (
                    this.recognized_revenue_account == input.recognized_revenue_account ||
                    (this.recognized_revenue_account != null &&
                    this.recognized_revenue_account.Equals(input.recognized_revenue_account))
                ) && 
                (
                    this.revenue_recognition_rule_name == input.revenue_recognition_rule_name ||
                    (this.revenue_recognition_rule_name != null &&
                    this.revenue_recognition_rule_name.Equals(input.revenue_recognition_rule_name))
                ) && 
                (
                    this.quantity == input.quantity ||
                    (this.quantity != null &&
                    this.quantity.Equals(input.quantity))
                ) && 
                (
                    this.service_end == input.service_end ||
                    (this.service_end != null &&
                    this.service_end.Equals(input.service_end))
                ) && 
                (
                    this.accounts_receivable_account == input.accounts_receivable_account ||
                    (this.accounts_receivable_account != null &&
                    this.accounts_receivable_account.Equals(input.accounts_receivable_account))
                ) && 
                (
                    this.discount_item == input.discount_item ||
                    (this.discount_item != null &&
                    this.discount_item.Equals(input.discount_item))
                ) && 
                (
                    this.applied_to_item_id == input.applied_to_item_id ||
                    (this.applied_to_item_id != null &&
                    this.applied_to_item_id.Equals(input.applied_to_item_id))
                ) && 
                (
                    this.service_start == input.service_start ||
                    (this.service_start != null &&
                    this.service_start.Equals(input.service_start))
                ) && 
                (
                    this.accounting_code == input.accounting_code ||
                    (this.accounting_code != null &&
                    this.accounting_code.Equals(input.accounting_code))
                ) && 
                (
                    this.invoice_id == input.invoice_id ||
                    (this.invoice_id != null &&
                    this.invoice_id.Equals(input.invoice_id))
                ) && 
                (
                    this.sku == input.sku ||
                    (this.sku != null &&
                    this.sku.Equals(input.sku))
                ) && 
                (
                    this.subscription_id == input.subscription_id ||
                    (this.subscription_id != null &&
                    this.subscription_id.Equals(input.subscription_id))
                ) && 
                (
                    this.tax_inclusive == input.tax_inclusive ||
                    (this.tax_inclusive != null &&
                    this.tax_inclusive.Equals(input.tax_inclusive))
                ) && 
                (
                    this.remaining_balance == input.remaining_balance ||
                    (this.remaining_balance != null &&
                    this.remaining_balance.Equals(input.remaining_balance))
                ) && 
                (
                    this.unit_of_measure == input.unit_of_measure ||
                    (this.unit_of_measure != null &&
                    this.unit_of_measure.Equals(input.unit_of_measure))
                ) && 
                (
                    this.unit_amount == input.unit_amount ||
                    (this.unit_amount != null &&
                    this.unit_amount.Equals(input.unit_amount))
                ) && 
                (
                    this.booking_reference == input.booking_reference ||
                    (this.booking_reference != null &&
                    this.booking_reference.Equals(input.booking_reference))
                ) && 
                (
                    this.name == input.name ||
                    (this.name != null &&
                    this.name.Equals(input.name))
                ) && 
                (
                    this.document_item_date == input.document_item_date ||
                    (this.document_item_date != null &&
                    this.document_item_date.Equals(input.document_item_date))
                ) && 
                (
                    this.price_id == input.price_id ||
                    (this.price_id != null &&
                    this.price_id.Equals(input.price_id))
                ) && 
                (
                    this.purchase_order_number == input.purchase_order_number ||
                    (this.purchase_order_number != null &&
                    this.purchase_order_number.Equals(input.purchase_order_number))
                ) && 
                (
                    this.tax == input.tax ||
                    (this.tax != null &&
                    this.tax.Equals(input.tax))
                ) && 
                (
                    this.tax_code == input.tax_code ||
                    (this.tax_code != null &&
                    this.tax_code.Equals(input.tax_code))
                ) && 
                (
                    this.subscription_item_id == input.subscription_item_id ||
                    (this.subscription_item_id != null &&
                    this.subscription_item_id.Equals(input.subscription_item_id))
                ) && 
                (
                    this.taxation_items == input.taxation_items ||
                    (this.taxation_items != null &&
                    this.taxation_items.Equals(input.taxation_items))
                ) && 
                (
                    this.invoice == input.invoice ||
                    (this.invoice != null &&
                    this.invoice.Equals(input.invoice))
                ) && 
                (
                    this.line_item == input.line_item ||
                    (this.line_item != null &&
                    this.line_item.Equals(input.line_item))
                ) && 
                (
                    this.subscription == input.subscription ||
                    (this.subscription != null &&
                    this.subscription.Equals(input.subscription))
                ) && 
                (
                    this.subscription_item == input.subscription_item ||
                    (this.subscription_item != null &&
                    this.subscription_item.Equals(input.subscription_item))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.id != null)
                    hashCode = hashCode * 59 + this.id.GetHashCode();
                if (this.updated_by_id != null)
                    hashCode = hashCode * 59 + this.updated_by_id.GetHashCode();
                if (this.updated_time != null)
                    hashCode = hashCode * 59 + this.updated_time.GetHashCode();
                if (this.created_by_id != null)
                    hashCode = hashCode * 59 + this.created_by_id.GetHashCode();
                if (this.created_time != null)
                    hashCode = hashCode * 59 + this.created_time.GetHashCode();
                if (this.custom_fields != null)
                    hashCode = hashCode * 59 + this.custom_fields.GetHashCode();
                if (this.custom_objects != null)
                    hashCode = hashCode * 59 + this.custom_objects.GetHashCode();
                if (this.amount != null)
                    hashCode = hashCode * 59 + this.amount.GetHashCode();
                if (this.description != null)
                    hashCode = hashCode * 59 + this.description.GetHashCode();
                if (this.deferred_revenue_account != null)
                    hashCode = hashCode * 59 + this.deferred_revenue_account.GetHashCode();
                if (this.recognized_revenue_account != null)
                    hashCode = hashCode * 59 + this.recognized_revenue_account.GetHashCode();
                if (this.revenue_recognition_rule_name != null)
                    hashCode = hashCode * 59 + this.revenue_recognition_rule_name.GetHashCode();
                if (this.quantity != null)
                    hashCode = hashCode * 59 + this.quantity.GetHashCode();
                if (this.service_end != null)
                    hashCode = hashCode * 59 + this.service_end.GetHashCode();
                if (this.accounts_receivable_account != null)
                    hashCode = hashCode * 59 + this.accounts_receivable_account.GetHashCode();
                if (this.discount_item != null)
                    hashCode = hashCode * 59 + this.discount_item.GetHashCode();
                if (this.applied_to_item_id != null)
                    hashCode = hashCode * 59 + this.applied_to_item_id.GetHashCode();
                if (this.service_start != null)
                    hashCode = hashCode * 59 + this.service_start.GetHashCode();
                if (this.accounting_code != null)
                    hashCode = hashCode * 59 + this.accounting_code.GetHashCode();
                if (this.invoice_id != null)
                    hashCode = hashCode * 59 + this.invoice_id.GetHashCode();
                if (this.sku != null)
                    hashCode = hashCode * 59 + this.sku.GetHashCode();
                if (this.subscription_id != null)
                    hashCode = hashCode * 59 + this.subscription_id.GetHashCode();
                if (this.tax_inclusive != null)
                    hashCode = hashCode * 59 + this.tax_inclusive.GetHashCode();
                if (this.remaining_balance != null)
                    hashCode = hashCode * 59 + this.remaining_balance.GetHashCode();
                if (this.unit_of_measure != null)
                    hashCode = hashCode * 59 + this.unit_of_measure.GetHashCode();
                if (this.unit_amount != null)
                    hashCode = hashCode * 59 + this.unit_amount.GetHashCode();
                if (this.booking_reference != null)
                    hashCode = hashCode * 59 + this.booking_reference.GetHashCode();
                if (this.name != null)
                    hashCode = hashCode * 59 + this.name.GetHashCode();
                if (this.document_item_date != null)
                    hashCode = hashCode * 59 + this.document_item_date.GetHashCode();
                if (this.price_id != null)
                    hashCode = hashCode * 59 + this.price_id.GetHashCode();
                if (this.purchase_order_number != null)
                    hashCode = hashCode * 59 + this.purchase_order_number.GetHashCode();
                if (this.tax != null)
                    hashCode = hashCode * 59 + this.tax.GetHashCode();
                if (this.tax_code != null)
                    hashCode = hashCode * 59 + this.tax_code.GetHashCode();
                if (this.subscription_item_id != null)
                    hashCode = hashCode * 59 + this.subscription_item_id.GetHashCode();
                if (this.taxation_items != null)
                    hashCode = hashCode * 59 + this.taxation_items.GetHashCode();
                if (this.invoice != null)
                    hashCode = hashCode * 59 + this.invoice.GetHashCode();
                if (this.line_item != null)
                    hashCode = hashCode * 59 + this.line_item.GetHashCode();
                if (this.subscription != null)
                    hashCode = hashCode * 59 + this.subscription.GetHashCode();
                if (this.subscription_item != null)
                    hashCode = hashCode * 59 + this.subscription_item.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
