/*
 * Quickstart API Reference
 *
 * Zuora Quickstart API is recommended for new customers and integrators, allowing new integrators to swiftly integrate with Zuora. It supports essential business use cases.   To use the Quickstart API, you must have the following features enabled on your tenant:   * [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization)  * [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement)  To find the latest changes made to the Zuora Quickstart API, check the [Quickstart API Changelog](https://www.zuora.com/developer/quickstart-api/changelog/2022q4-changelog/).  We recommend that you subscribe to [Developers Community](https://community.zuora.com/communities/community-home?communitykey=e2a932b4-50c4-4019-a3e8-362e38714df3) to get notifications when a new version is released.  
 *
 * The version of the OpenAPI document: 2023-09-25
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Zuora.Client.OpenAPIDateConverter;

namespace Zuora.Model
{
    /// <summary>
    /// PaymentScheduleItem
    /// </summary>
    [DataContract]
    public partial class PaymentScheduleItem :  IEquatable<PaymentScheduleItem>, IValidatableObject
    {
        /// <summary>
        /// The status of the payment schedule item. active: there are unprocessed payment schedule items. canceled: the payment schedule has been canceled. complete: the payment schedule is complete and all items have been processed.
        /// </summary>
        /// <value>The status of the payment schedule item. active: there are unprocessed payment schedule items. canceled: the payment schedule has been canceled. complete: the payment schedule is complete and all items have been processed.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum StateEnum
        {
            /// <summary>
            /// Enum Pending for value: pending
            /// </summary>
            [EnumMember(Value = "pending")]
            Pending = 1,

            /// <summary>
            /// Enum Canceled for value: canceled
            /// </summary>
            [EnumMember(Value = "canceled")]
            Canceled = 2,

            /// <summary>
            /// Enum Complete for value: complete
            /// </summary>
            [EnumMember(Value = "complete")]
            Complete = 3,

            /// <summary>
            /// Enum Error for value: error
            /// </summary>
            [EnumMember(Value = "error")]
            Error = 4

        }

        /// <summary>
        /// The status of the payment schedule item. active: there are unprocessed payment schedule items. canceled: the payment schedule has been canceled. complete: the payment schedule is complete and all items have been processed.
        /// </summary>
        /// <value>The status of the payment schedule item. active: there are unprocessed payment schedule items. canceled: the payment schedule has been canceled. complete: the payment schedule is complete and all items have been processed.</value>
        [DataMember(Name="state", EmitDefaultValue=false)]
        public StateEnum? state { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentScheduleItem" /> class.
        /// </summary>
        /// <param name="customFields">Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format..</param>
        /// <param name="accountId">Unique identifier of the customer account the payment schedule belongs to..</param>
        /// <param name="amount">The amount to be collected by this payment schedule item..</param>
        /// <param name="balance">The remaining balance of payment schedule item..</param>
        /// <param name="billingDocument">The billing document with which the payment schedule is associated. If you have the Standalone Payment feature enabled, you can leave this field blank and set standalone to true to create standalone payments. You can also choose to create unapplied payments by leaving this object blank and setting standalone to false. If Standalone Payment is not enabled, leaving this object unspecified will create unapplied payments..</param>
        /// <param name="cancellationReason">The reason for the cancellation of payment schedule item..</param>
        /// <param name="currency">Currency of the payment schedule. The default value is the account&#39;s default currency. This field will be ignored when items is specified..</param>
        /// <param name="description">An arbitrary string attached to the object. Often useful for displaying to users..</param>
        /// <param name="paymentScheduleItemNumber">Number of the payment schedule item..</param>
        /// <param name="paymentGatewayId">ID of the payment gateway used to collect payments. The default value is the account&#39;s default payment gateway ID. If no payment gateway ID is found on the customer account level, the default value will be the tenant&#39;s default payment gateway ID. This field will be ignored when &#x60;items&#x60; is specified..</param>
        /// <param name="paymentMethodId">ID of the payment method. The default value is the account&#39;s default payment method ID. This field will be ignored when &#x60;items&#x60; is specified..</param>
        /// <param name="paymentOptionId">ID of the payment option..</param>
        /// <param name="paymentScheduleId">ID of the payment schedule..</param>
        /// <param name="paymentScheduleNumber">Number of the payment schedule..</param>
        /// <param name="payments">payments.</param>
        /// <param name="runHour">At which hour in the day in the tenant&#39;s timezone this payment will be collected. Available values:[0,1,2,~,22,23]. If the time difference between your tenantâ€™s timezone and the timezone where Zuora servers are located is not in full hours, for example, 2.5 hours, the payment schedule items will be triggered half an hour later than your scheduled time. The default value is 0. If the payment run_hour and scheduled_date are backdated, the system will collect the payment when the next run_hour occurs..</param>
        /// <param name="scheduledDate">The scheduled date of collection..</param>
        /// <param name="standalone">Indicates whether the payments created by the payment schedule are standalone payments or not. When setting to true, standalone payments will be created. When setting to false, you can either specify a billing document, or not specifying any billing documents. In the later case, unapplied payments will be created. If set to null, standalone payments will be created. Note: This parameter is only available if standalone payments are enabled in your tenant. Do not include this parameter if standalone payment have not been enabled in your tenant. If standalone payments are enabled, the default value is true..</param>
        /// <param name="state">The status of the payment schedule item. active: there are unprocessed payment schedule items. canceled: the payment schedule has been canceled. complete: the payment schedule is complete and all items have been processed..</param>
        /// <param name="errorMessage">An error message indicating why payment collection failed for this payment schedule item..</param>
        public PaymentScheduleItem(Dictionary<string, Object> customFields = default(Dictionary<string, Object>), string accountId = default(string), decimal amount = default(decimal), decimal balance = default(decimal), PaymentScheduleBillingDocumentResponse billingDocument = default(PaymentScheduleBillingDocumentResponse), string cancellationReason = default(string), string currency = default(string), string description = default(string), string paymentScheduleItemNumber = default(string), string paymentGatewayId = default(string), string paymentMethodId = default(string), string paymentOptionId = default(string), string paymentScheduleId = default(string), string paymentScheduleNumber = default(string), List<PaymentScheduleItemPayments> payments = default(List<PaymentScheduleItemPayments>), int runHour = default(int), DateTime scheduledDate = default(DateTime), bool standalone = default(bool), StateEnum? state = default(StateEnum?), string errorMessage = default(string))
        {
            this.billing_document = billingDocument;
            this.custom_fields = customFields;
            this.account_id = accountId;
            this.amount = amount;
            this.balance = balance;
            this.billing_document = billingDocument;
            this.cancellation_reason = cancellationReason;
            this.currency = currency;
            this.description = description;
            this.payment_schedule_item_number = paymentScheduleItemNumber;
            this.payment_gateway_id = paymentGatewayId;
            this.payment_method_id = paymentMethodId;
            this.payment_option_id = paymentOptionId;
            this.payment_schedule_id = paymentScheduleId;
            this.payment_schedule_number = paymentScheduleNumber;
            this.payments = payments;
            this.run_hour = runHour;
            this.scheduled_date = scheduledDate;
            this.standalone = standalone;
            this.state = state;
            this.error_message = errorMessage;
        }

        /// <summary>
        /// Unique identifier for the object.
        /// </summary>
        /// <value>Unique identifier for the object.</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string id { get; private set; }

        /// <summary>
        /// Unique identifier of the Zuora user who last updated the object
        /// </summary>
        /// <value>Unique identifier of the Zuora user who last updated the object</value>
        [DataMember(Name="updated_by_id", EmitDefaultValue=false)]
        public string updated_by_id { get; private set; }

        /// <summary>
        /// The date and time when the object was last updated in ISO 8601 UTC format.
        /// </summary>
        /// <value>The date and time when the object was last updated in ISO 8601 UTC format.</value>
        [DataMember(Name="updated_time", EmitDefaultValue=false)]
        public DateTime updated_time { get; private set; }

        /// <summary>
        /// Unique identifier of the Zuora user who created the object
        /// </summary>
        /// <value>Unique identifier of the Zuora user who created the object</value>
        [DataMember(Name="created_by_id", EmitDefaultValue=false)]
        public string created_by_id { get; private set; }

        /// <summary>
        /// The date and time when the object was created in ISO 8601 UTC format.
        /// </summary>
        /// <value>The date and time when the object was created in ISO 8601 UTC format.</value>
        [DataMember(Name="created_time", EmitDefaultValue=false)]
        public DateTime created_time { get; private set; }

        /// <summary>
        /// Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format.
        /// </summary>
        /// <value>Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format.</value>
        [DataMember(Name="custom_fields", EmitDefaultValue=false)]
        public Dictionary<string, Object> custom_fields { get; set; }

        /// <summary>
        /// The custom fields associated with an object. For more information about custom fields, see [Manage custom fields](https://knowledgecenter.zuora.com/Central_Platform/Manage_Custom_Fields).
        /// </summary>
        /// <value>The custom fields associated with an object. For more information about custom fields, see [Manage custom fields](https://knowledgecenter.zuora.com/Central_Platform/Manage_Custom_Fields).</value>
        [DataMember(Name="custom_objects", EmitDefaultValue=false)]
        public Dictionary<string, Object> custom_objects { get; private set; }

        /// <summary>
        /// Unique identifier of the customer account the payment schedule belongs to.
        /// </summary>
        /// <value>Unique identifier of the customer account the payment schedule belongs to.</value>
        [DataMember(Name="account_id", EmitDefaultValue=false)]
        public string account_id { get; set; }

        /// <summary>
        /// The amount to be collected by this payment schedule item.
        /// </summary>
        /// <value>The amount to be collected by this payment schedule item.</value>
        [DataMember(Name="amount", EmitDefaultValue=false)]
        public decimal amount { get; set; }

        /// <summary>
        /// The remaining balance of payment schedule item.
        /// </summary>
        /// <value>The remaining balance of payment schedule item.</value>
        [DataMember(Name="balance", EmitDefaultValue=false)]
        public decimal balance { get; set; }

        /// <summary>
        /// The billing document with which the payment schedule is associated. If you have the Standalone Payment feature enabled, you can leave this field blank and set standalone to true to create standalone payments. You can also choose to create unapplied payments by leaving this object blank and setting standalone to false. If Standalone Payment is not enabled, leaving this object unspecified will create unapplied payments.
        /// </summary>
        /// <value>The billing document with which the payment schedule is associated. If you have the Standalone Payment feature enabled, you can leave this field blank and set standalone to true to create standalone payments. You can also choose to create unapplied payments by leaving this object blank and setting standalone to false. If Standalone Payment is not enabled, leaving this object unspecified will create unapplied payments.</value>
        [DataMember(Name="billing_document", EmitDefaultValue=true)]
        public PaymentScheduleBillingDocumentResponse billing_document { get; set; }

        /// <summary>
        /// The reason for the cancellation of payment schedule item.
        /// </summary>
        /// <value>The reason for the cancellation of payment schedule item.</value>
        [DataMember(Name="cancellation_reason", EmitDefaultValue=false)]
        public string cancellation_reason { get; set; }

        /// <summary>
        /// Currency of the payment schedule. The default value is the account&#39;s default currency. This field will be ignored when items is specified.
        /// </summary>
        /// <value>Currency of the payment schedule. The default value is the account&#39;s default currency. This field will be ignored when items is specified.</value>
        [DataMember(Name="currency", EmitDefaultValue=false)]
        public string currency { get; set; }

        /// <summary>
        /// An arbitrary string attached to the object. Often useful for displaying to users.
        /// </summary>
        /// <value>An arbitrary string attached to the object. Often useful for displaying to users.</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string description { get; set; }

        /// <summary>
        /// Number of the payment schedule item.
        /// </summary>
        /// <value>Number of the payment schedule item.</value>
        [DataMember(Name="payment_schedule_item_number", EmitDefaultValue=false)]
        public string payment_schedule_item_number { get; set; }

        /// <summary>
        /// ID of the payment gateway used to collect payments. The default value is the account&#39;s default payment gateway ID. If no payment gateway ID is found on the customer account level, the default value will be the tenant&#39;s default payment gateway ID. This field will be ignored when &#x60;items&#x60; is specified.
        /// </summary>
        /// <value>ID of the payment gateway used to collect payments. The default value is the account&#39;s default payment gateway ID. If no payment gateway ID is found on the customer account level, the default value will be the tenant&#39;s default payment gateway ID. This field will be ignored when &#x60;items&#x60; is specified.</value>
        [DataMember(Name="payment_gateway_id", EmitDefaultValue=false)]
        public string payment_gateway_id { get; set; }

        /// <summary>
        /// ID of the payment method. The default value is the account&#39;s default payment method ID. This field will be ignored when &#x60;items&#x60; is specified.
        /// </summary>
        /// <value>ID of the payment method. The default value is the account&#39;s default payment method ID. This field will be ignored when &#x60;items&#x60; is specified.</value>
        [DataMember(Name="payment_method_id", EmitDefaultValue=false)]
        public string payment_method_id { get; set; }

        /// <summary>
        /// ID of the payment option.
        /// </summary>
        /// <value>ID of the payment option.</value>
        [DataMember(Name="payment_option_id", EmitDefaultValue=false)]
        public string payment_option_id { get; set; }

        /// <summary>
        /// ID of the payment schedule.
        /// </summary>
        /// <value>ID of the payment schedule.</value>
        [DataMember(Name="payment_schedule_id", EmitDefaultValue=false)]
        public string payment_schedule_id { get; set; }

        /// <summary>
        /// Number of the payment schedule.
        /// </summary>
        /// <value>Number of the payment schedule.</value>
        [DataMember(Name="payment_schedule_number", EmitDefaultValue=false)]
        public string payment_schedule_number { get; set; }

        /// <summary>
        /// Gets or Sets payments
        /// </summary>
        [DataMember(Name="payments", EmitDefaultValue=false)]
        public List<PaymentScheduleItemPayments> payments { get; set; }

        /// <summary>
        /// At which hour in the day in the tenant&#39;s timezone this payment will be collected. Available values:[0,1,2,~,22,23]. If the time difference between your tenantâ€™s timezone and the timezone where Zuora servers are located is not in full hours, for example, 2.5 hours, the payment schedule items will be triggered half an hour later than your scheduled time. The default value is 0. If the payment run_hour and scheduled_date are backdated, the system will collect the payment when the next run_hour occurs.
        /// </summary>
        /// <value>At which hour in the day in the tenant&#39;s timezone this payment will be collected. Available values:[0,1,2,~,22,23]. If the time difference between your tenantâ€™s timezone and the timezone where Zuora servers are located is not in full hours, for example, 2.5 hours, the payment schedule items will be triggered half an hour later than your scheduled time. The default value is 0. If the payment run_hour and scheduled_date are backdated, the system will collect the payment when the next run_hour occurs.</value>
        [DataMember(Name="run_hour", EmitDefaultValue=false)]
        public int run_hour { get; set; }

        /// <summary>
        /// The scheduled date of collection.
        /// </summary>
        /// <value>The scheduled date of collection.</value>
        [DataMember(Name="scheduled_date", EmitDefaultValue=false)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime scheduled_date { get; set; }

        /// <summary>
        /// Indicates whether the payments created by the payment schedule are standalone payments or not. When setting to true, standalone payments will be created. When setting to false, you can either specify a billing document, or not specifying any billing documents. In the later case, unapplied payments will be created. If set to null, standalone payments will be created. Note: This parameter is only available if standalone payments are enabled in your tenant. Do not include this parameter if standalone payment have not been enabled in your tenant. If standalone payments are enabled, the default value is true.
        /// </summary>
        /// <value>Indicates whether the payments created by the payment schedule are standalone payments or not. When setting to true, standalone payments will be created. When setting to false, you can either specify a billing document, or not specifying any billing documents. In the later case, unapplied payments will be created. If set to null, standalone payments will be created. Note: This parameter is only available if standalone payments are enabled in your tenant. Do not include this parameter if standalone payment have not been enabled in your tenant. If standalone payments are enabled, the default value is true.</value>
        [DataMember(Name="standalone", EmitDefaultValue=false)]
        public bool standalone { get; set; }


        /// <summary>
        /// An error message indicating why payment collection failed for this payment schedule item.
        /// </summary>
        /// <value>An error message indicating why payment collection failed for this payment schedule item.</value>
        [DataMember(Name="error_message", EmitDefaultValue=false)]
        public string error_message { get; set; }

        /// <summary>
        /// List of customer payments.
        /// </summary>
        /// <value>List of customer payments.</value>
        [DataMember(Name="payment", EmitDefaultValue=true)]
        public Payment payment { get; private set; }

        /// <summary>
        /// Payment schedule record.
        /// </summary>
        /// <value>Payment schedule record.</value>
        [DataMember(Name="payment_schedule", EmitDefaultValue=true)]
        public PaymentSchedule payment_schedule { get; private set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PaymentScheduleItem {\n");
            sb.Append("  id: ").Append(id).Append("\n");
            sb.Append("  updated_by_id: ").Append(updated_by_id).Append("\n");
            sb.Append("  updated_time: ").Append(updated_time).Append("\n");
            sb.Append("  created_by_id: ").Append(created_by_id).Append("\n");
            sb.Append("  created_time: ").Append(created_time).Append("\n");
            sb.Append("  custom_fields: ").Append(custom_fields).Append("\n");
            sb.Append("  custom_objects: ").Append(custom_objects).Append("\n");
            sb.Append("  account_id: ").Append(account_id).Append("\n");
            sb.Append("  amount: ").Append(amount).Append("\n");
            sb.Append("  balance: ").Append(balance).Append("\n");
            sb.Append("  billing_document: ").Append(billing_document).Append("\n");
            sb.Append("  cancellation_reason: ").Append(cancellation_reason).Append("\n");
            sb.Append("  currency: ").Append(currency).Append("\n");
            sb.Append("  description: ").Append(description).Append("\n");
            sb.Append("  payment_schedule_item_number: ").Append(payment_schedule_item_number).Append("\n");
            sb.Append("  payment_gateway_id: ").Append(payment_gateway_id).Append("\n");
            sb.Append("  payment_method_id: ").Append(payment_method_id).Append("\n");
            sb.Append("  payment_option_id: ").Append(payment_option_id).Append("\n");
            sb.Append("  payment_schedule_id: ").Append(payment_schedule_id).Append("\n");
            sb.Append("  payment_schedule_number: ").Append(payment_schedule_number).Append("\n");
            sb.Append("  payments: ").Append(payments).Append("\n");
            sb.Append("  run_hour: ").Append(run_hour).Append("\n");
            sb.Append("  scheduled_date: ").Append(scheduled_date).Append("\n");
            sb.Append("  standalone: ").Append(standalone).Append("\n");
            sb.Append("  state: ").Append(state).Append("\n");
            sb.Append("  error_message: ").Append(error_message).Append("\n");
            sb.Append("  payment: ").Append(payment).Append("\n");
            sb.Append("  payment_schedule: ").Append(payment_schedule).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PaymentScheduleItem);
        }

        /// <summary>
        /// Returns true if PaymentScheduleItem instances are equal
        /// </summary>
        /// <param name="input">Instance of PaymentScheduleItem to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PaymentScheduleItem input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.id == input.id ||
                    (this.id != null &&
                    this.id.Equals(input.id))
                ) && 
                (
                    this.updated_by_id == input.updated_by_id ||
                    (this.updated_by_id != null &&
                    this.updated_by_id.Equals(input.updated_by_id))
                ) && 
                (
                    this.updated_time == input.updated_time ||
                    (this.updated_time != null &&
                    this.updated_time.Equals(input.updated_time))
                ) && 
                (
                    this.created_by_id == input.created_by_id ||
                    (this.created_by_id != null &&
                    this.created_by_id.Equals(input.created_by_id))
                ) && 
                (
                    this.created_time == input.created_time ||
                    (this.created_time != null &&
                    this.created_time.Equals(input.created_time))
                ) && 
                (
                    this.custom_fields == input.custom_fields ||
                    this.custom_fields != null &&
                    input.custom_fields != null &&
                    this.custom_fields.SequenceEqual(input.custom_fields)
                ) && 
                (
                    this.custom_objects == input.custom_objects ||
                    this.custom_objects != null &&
                    input.custom_objects != null &&
                    this.custom_objects.SequenceEqual(input.custom_objects)
                ) && 
                (
                    this.account_id == input.account_id ||
                    (this.account_id != null &&
                    this.account_id.Equals(input.account_id))
                ) && 
                (
                    this.amount == input.amount ||
                    (this.amount != null &&
                    this.amount.Equals(input.amount))
                ) && 
                (
                    this.balance == input.balance ||
                    (this.balance != null &&
                    this.balance.Equals(input.balance))
                ) && 
                (
                    this.billing_document == input.billing_document ||
                    (this.billing_document != null &&
                    this.billing_document.Equals(input.billing_document))
                ) && 
                (
                    this.cancellation_reason == input.cancellation_reason ||
                    (this.cancellation_reason != null &&
                    this.cancellation_reason.Equals(input.cancellation_reason))
                ) && 
                (
                    this.currency == input.currency ||
                    (this.currency != null &&
                    this.currency.Equals(input.currency))
                ) && 
                (
                    this.description == input.description ||
                    (this.description != null &&
                    this.description.Equals(input.description))
                ) && 
                (
                    this.payment_schedule_item_number == input.payment_schedule_item_number ||
                    (this.payment_schedule_item_number != null &&
                    this.payment_schedule_item_number.Equals(input.payment_schedule_item_number))
                ) && 
                (
                    this.payment_gateway_id == input.payment_gateway_id ||
                    (this.payment_gateway_id != null &&
                    this.payment_gateway_id.Equals(input.payment_gateway_id))
                ) && 
                (
                    this.payment_method_id == input.payment_method_id ||
                    (this.payment_method_id != null &&
                    this.payment_method_id.Equals(input.payment_method_id))
                ) && 
                (
                    this.payment_option_id == input.payment_option_id ||
                    (this.payment_option_id != null &&
                    this.payment_option_id.Equals(input.payment_option_id))
                ) && 
                (
                    this.payment_schedule_id == input.payment_schedule_id ||
                    (this.payment_schedule_id != null &&
                    this.payment_schedule_id.Equals(input.payment_schedule_id))
                ) && 
                (
                    this.payment_schedule_number == input.payment_schedule_number ||
                    (this.payment_schedule_number != null &&
                    this.payment_schedule_number.Equals(input.payment_schedule_number))
                ) && 
                (
                    this.payments == input.payments ||
                    this.payments != null &&
                    input.payments != null &&
                    this.payments.SequenceEqual(input.payments)
                ) && 
                (
                    this.run_hour == input.run_hour ||
                    (this.run_hour != null &&
                    this.run_hour.Equals(input.run_hour))
                ) && 
                (
                    this.scheduled_date == input.scheduled_date ||
                    (this.scheduled_date != null &&
                    this.scheduled_date.Equals(input.scheduled_date))
                ) && 
                (
                    this.standalone == input.standalone ||
                    (this.standalone != null &&
                    this.standalone.Equals(input.standalone))
                ) && 
                (
                    this.state == input.state ||
                    (this.state != null &&
                    this.state.Equals(input.state))
                ) && 
                (
                    this.error_message == input.error_message ||
                    (this.error_message != null &&
                    this.error_message.Equals(input.error_message))
                ) && 
                (
                    this.payment == input.payment ||
                    (this.payment != null &&
                    this.payment.Equals(input.payment))
                ) && 
                (
                    this.payment_schedule == input.payment_schedule ||
                    (this.payment_schedule != null &&
                    this.payment_schedule.Equals(input.payment_schedule))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.id != null)
                    hashCode = hashCode * 59 + this.id.GetHashCode();
                if (this.updated_by_id != null)
                    hashCode = hashCode * 59 + this.updated_by_id.GetHashCode();
                if (this.updated_time != null)
                    hashCode = hashCode * 59 + this.updated_time.GetHashCode();
                if (this.created_by_id != null)
                    hashCode = hashCode * 59 + this.created_by_id.GetHashCode();
                if (this.created_time != null)
                    hashCode = hashCode * 59 + this.created_time.GetHashCode();
                if (this.custom_fields != null)
                    hashCode = hashCode * 59 + this.custom_fields.GetHashCode();
                if (this.custom_objects != null)
                    hashCode = hashCode * 59 + this.custom_objects.GetHashCode();
                if (this.account_id != null)
                    hashCode = hashCode * 59 + this.account_id.GetHashCode();
                if (this.amount != null)
                    hashCode = hashCode * 59 + this.amount.GetHashCode();
                if (this.balance != null)
                    hashCode = hashCode * 59 + this.balance.GetHashCode();
                if (this.billing_document != null)
                    hashCode = hashCode * 59 + this.billing_document.GetHashCode();
                if (this.cancellation_reason != null)
                    hashCode = hashCode * 59 + this.cancellation_reason.GetHashCode();
                if (this.currency != null)
                    hashCode = hashCode * 59 + this.currency.GetHashCode();
                if (this.description != null)
                    hashCode = hashCode * 59 + this.description.GetHashCode();
                if (this.payment_schedule_item_number != null)
                    hashCode = hashCode * 59 + this.payment_schedule_item_number.GetHashCode();
                if (this.payment_gateway_id != null)
                    hashCode = hashCode * 59 + this.payment_gateway_id.GetHashCode();
                if (this.payment_method_id != null)
                    hashCode = hashCode * 59 + this.payment_method_id.GetHashCode();
                if (this.payment_option_id != null)
                    hashCode = hashCode * 59 + this.payment_option_id.GetHashCode();
                if (this.payment_schedule_id != null)
                    hashCode = hashCode * 59 + this.payment_schedule_id.GetHashCode();
                if (this.payment_schedule_number != null)
                    hashCode = hashCode * 59 + this.payment_schedule_number.GetHashCode();
                if (this.payments != null)
                    hashCode = hashCode * 59 + this.payments.GetHashCode();
                if (this.run_hour != null)
                    hashCode = hashCode * 59 + this.run_hour.GetHashCode();
                if (this.scheduled_date != null)
                    hashCode = hashCode * 59 + this.scheduled_date.GetHashCode();
                if (this.standalone != null)
                    hashCode = hashCode * 59 + this.standalone.GetHashCode();
                if (this.state != null)
                    hashCode = hashCode * 59 + this.state.GetHashCode();
                if (this.error_message != null)
                    hashCode = hashCode * 59 + this.error_message.GetHashCode();
                if (this.payment != null)
                    hashCode = hashCode * 59 + this.payment.GetHashCode();
                if (this.payment_schedule != null)
                    hashCode = hashCode * 59 + this.payment_schedule.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {


            // run_hour (int) maximum
            if(this.run_hour > (int)23)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for run_hour, must be a value less than or equal to 23.", new [] { "run_hour" });
            }

            // run_hour (int) minimum
            if(this.run_hour < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for run_hour, must be a value greater than or equal to 0.", new [] { "run_hour" });
            }

            yield break;
        }
    }

}
