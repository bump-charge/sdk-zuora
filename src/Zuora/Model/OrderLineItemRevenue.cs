/*
 * Quickstart API Reference
 *
 * Zuora Quickstart API is recommended for new customers and integrators, allowing new integrators to swiftly integrate with Zuora. It supports essential business use cases.   To use the Quickstart API, you must have the following features enabled on your tenant:   * [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization)  * [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement)  To find the latest changes made to the Zuora Quickstart API, check the [Quickstart API Changelog](https://www.zuora.com/developer/quickstart-api/changelog/2022q4-changelog/).  We recommend that you subscribe to [Developers Community](https://community.zuora.com/communities/community-home?communitykey=e2a932b4-50c4-4019-a3e8-362e38714df3) to get notifications when a new version is released.  
 *
 * The version of the OpenAPI document: 2023-09-25
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Zuora.Client.OpenAPIDateConverter;

namespace Zuora.Model
{
    /// <summary>
    /// Accounting configuration if you have Zuora Revenue enabled.
    /// </summary>
    [DataContract]
    public partial class OrderLineItemRevenue :  IEquatable<OrderLineItemRevenue>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderLineItemRevenue" /> class.
        /// </summary>
        /// <param name="excludeItemBillingFromRevenueAccounting">If set to &#x60;true&#x60;, any associated billing document items are excluded from the revenue accounting..</param>
        /// <param name="excludeItemBookingFromRevenueAccounting">If set to &#x60;true&#x60;, any associated subscription items are excluded from the revenue accounting..</param>
        /// <param name="adjustmentRevenueAccount">An active accounting code in your Zuora chart of accounts..</param>
        /// <param name="contractRecognizedRevenueAccount">An active accounting code in your Zuora chart of accounts..</param>
        /// <param name="deferredRevenueAccount">An active accounting code in your Zuora chart of accounts..</param>
        /// <param name="recognizedRevenueAccount">An active accounting code in your Zuora chart of accounts..</param>
        /// <param name="revenueRecognitionRuleName">The revenue recognition rule for the order line item..</param>
        public OrderLineItemRevenue(bool excludeItemBillingFromRevenueAccounting = default(bool), bool excludeItemBookingFromRevenueAccounting = default(bool), string adjustmentRevenueAccount = default(string), string contractRecognizedRevenueAccount = default(string), string deferredRevenueAccount = default(string), string recognizedRevenueAccount = default(string), string revenueRecognitionRuleName = default(string))
        {
            this.exclude_item_billing_from_revenue_accounting = excludeItemBillingFromRevenueAccounting;
            this.exclude_item_booking_from_revenue_accounting = excludeItemBookingFromRevenueAccounting;
            this.adjustment_revenue_account = adjustmentRevenueAccount;
            this.contract_recognized_revenue_account = contractRecognizedRevenueAccount;
            this.deferred_revenue_account = deferredRevenueAccount;
            this.recognized_revenue_account = recognizedRevenueAccount;
            this.revenue_recognition_rule_name = revenueRecognitionRuleName;
        }

        /// <summary>
        /// If set to &#x60;true&#x60;, any associated billing document items are excluded from the revenue accounting.
        /// </summary>
        /// <value>If set to &#x60;true&#x60;, any associated billing document items are excluded from the revenue accounting.</value>
        [DataMember(Name="exclude_item_billing_from_revenue_accounting", EmitDefaultValue=false)]
        public bool exclude_item_billing_from_revenue_accounting { get; set; }

        /// <summary>
        /// If set to &#x60;true&#x60;, any associated subscription items are excluded from the revenue accounting.
        /// </summary>
        /// <value>If set to &#x60;true&#x60;, any associated subscription items are excluded from the revenue accounting.</value>
        [DataMember(Name="exclude_item_booking_from_revenue_accounting", EmitDefaultValue=false)]
        public bool exclude_item_booking_from_revenue_accounting { get; set; }

        /// <summary>
        /// An active accounting code in your Zuora chart of accounts.
        /// </summary>
        /// <value>An active accounting code in your Zuora chart of accounts.</value>
        [DataMember(Name="adjustment_revenue_account", EmitDefaultValue=false)]
        public string adjustment_revenue_account { get; set; }

        /// <summary>
        /// An active accounting code in your Zuora chart of accounts.
        /// </summary>
        /// <value>An active accounting code in your Zuora chart of accounts.</value>
        [DataMember(Name="contract_recognized_revenue_account", EmitDefaultValue=false)]
        public string contract_recognized_revenue_account { get; set; }

        /// <summary>
        /// An active accounting code in your Zuora chart of accounts.
        /// </summary>
        /// <value>An active accounting code in your Zuora chart of accounts.</value>
        [DataMember(Name="deferred_revenue_account", EmitDefaultValue=false)]
        public string deferred_revenue_account { get; set; }

        /// <summary>
        /// An active accounting code in your Zuora chart of accounts.
        /// </summary>
        /// <value>An active accounting code in your Zuora chart of accounts.</value>
        [DataMember(Name="recognized_revenue_account", EmitDefaultValue=false)]
        public string recognized_revenue_account { get; set; }

        /// <summary>
        /// The revenue recognition rule for the order line item.
        /// </summary>
        /// <value>The revenue recognition rule for the order line item.</value>
        [DataMember(Name="revenue_recognition_rule_name", EmitDefaultValue=false)]
        public string revenue_recognition_rule_name { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OrderLineItemRevenue {\n");
            sb.Append("  exclude_item_billing_from_revenue_accounting: ").Append(exclude_item_billing_from_revenue_accounting).Append("\n");
            sb.Append("  exclude_item_booking_from_revenue_accounting: ").Append(exclude_item_booking_from_revenue_accounting).Append("\n");
            sb.Append("  adjustment_revenue_account: ").Append(adjustment_revenue_account).Append("\n");
            sb.Append("  contract_recognized_revenue_account: ").Append(contract_recognized_revenue_account).Append("\n");
            sb.Append("  deferred_revenue_account: ").Append(deferred_revenue_account).Append("\n");
            sb.Append("  recognized_revenue_account: ").Append(recognized_revenue_account).Append("\n");
            sb.Append("  revenue_recognition_rule_name: ").Append(revenue_recognition_rule_name).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrderLineItemRevenue);
        }

        /// <summary>
        /// Returns true if OrderLineItemRevenue instances are equal
        /// </summary>
        /// <param name="input">Instance of OrderLineItemRevenue to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrderLineItemRevenue input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.exclude_item_billing_from_revenue_accounting == input.exclude_item_billing_from_revenue_accounting ||
                    (this.exclude_item_billing_from_revenue_accounting != null &&
                    this.exclude_item_billing_from_revenue_accounting.Equals(input.exclude_item_billing_from_revenue_accounting))
                ) && 
                (
                    this.exclude_item_booking_from_revenue_accounting == input.exclude_item_booking_from_revenue_accounting ||
                    (this.exclude_item_booking_from_revenue_accounting != null &&
                    this.exclude_item_booking_from_revenue_accounting.Equals(input.exclude_item_booking_from_revenue_accounting))
                ) && 
                (
                    this.adjustment_revenue_account == input.adjustment_revenue_account ||
                    (this.adjustment_revenue_account != null &&
                    this.adjustment_revenue_account.Equals(input.adjustment_revenue_account))
                ) && 
                (
                    this.contract_recognized_revenue_account == input.contract_recognized_revenue_account ||
                    (this.contract_recognized_revenue_account != null &&
                    this.contract_recognized_revenue_account.Equals(input.contract_recognized_revenue_account))
                ) && 
                (
                    this.deferred_revenue_account == input.deferred_revenue_account ||
                    (this.deferred_revenue_account != null &&
                    this.deferred_revenue_account.Equals(input.deferred_revenue_account))
                ) && 
                (
                    this.recognized_revenue_account == input.recognized_revenue_account ||
                    (this.recognized_revenue_account != null &&
                    this.recognized_revenue_account.Equals(input.recognized_revenue_account))
                ) && 
                (
                    this.revenue_recognition_rule_name == input.revenue_recognition_rule_name ||
                    (this.revenue_recognition_rule_name != null &&
                    this.revenue_recognition_rule_name.Equals(input.revenue_recognition_rule_name))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.exclude_item_billing_from_revenue_accounting != null)
                    hashCode = hashCode * 59 + this.exclude_item_billing_from_revenue_accounting.GetHashCode();
                if (this.exclude_item_booking_from_revenue_accounting != null)
                    hashCode = hashCode * 59 + this.exclude_item_booking_from_revenue_accounting.GetHashCode();
                if (this.adjustment_revenue_account != null)
                    hashCode = hashCode * 59 + this.adjustment_revenue_account.GetHashCode();
                if (this.contract_recognized_revenue_account != null)
                    hashCode = hashCode * 59 + this.contract_recognized_revenue_account.GetHashCode();
                if (this.deferred_revenue_account != null)
                    hashCode = hashCode * 59 + this.deferred_revenue_account.GetHashCode();
                if (this.recognized_revenue_account != null)
                    hashCode = hashCode * 59 + this.recognized_revenue_account.GetHashCode();
                if (this.revenue_recognition_rule_name != null)
                    hashCode = hashCode * 59 + this.revenue_recognition_rule_name.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // deferred_revenue_account (string) maxLength
            if(this.deferred_revenue_account != null && this.deferred_revenue_account.Length > 100)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for deferred_revenue_account, length must be less than 100.", new [] { "deferred_revenue_account" });
            }


            // recognized_revenue_account (string) maxLength
            if(this.recognized_revenue_account != null && this.recognized_revenue_account.Length > 100)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for recognized_revenue_account, length must be less than 100.", new [] { "recognized_revenue_account" });
            }


            yield break;
        }
    }

}
