/*
 * Quickstart API Reference
 *
 * Zuora Quickstart API is recommended for new customers and integrators, allowing new integrators to swiftly integrate with Zuora. It supports essential business use cases.   To use the Quickstart API, you must have the following features enabled on your tenant:   * [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization)  * [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement)  To find the latest changes made to the Zuora Quickstart API, check the [Quickstart API Changelog](https://www.zuora.com/developer/quickstart-api/changelog/2022q4-changelog/).  We recommend that you subscribe to [Developers Community](https://community.zuora.com/communities/community-home?communitykey=e2a932b4-50c4-4019-a3e8-362e38714df3) to get notifications when a new version is released.  
 *
 * The version of the OpenAPI document: 2023-09-25
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Zuora.Client;
using Zuora.Api;
using Zuora.Model;

namespace Zuora.Test
{
    /// <summary>
    ///  Class for testing PaymentScheduleItemsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PaymentScheduleItemsApiTests
    {
        private PaymentScheduleItemsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PaymentScheduleItemsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PaymentScheduleItemsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' PaymentScheduleItemsApi
            //Assert.IsInstanceOf(typeof(PaymentScheduleItemsApi), instance);
        }

        
        /// <summary>
        /// Test CancelPaymentScheduleItem
        /// </summary>
        [Test]
        public void CancelPaymentScheduleItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string paymentScheduleItemId = null;
            //List<string> fields = null;
            //List<string> paymentScheduleFields = null;
            //List<string> expand = null;
            //List<string> filter = null;
            //int? pageSize = null;
            //string zuoraTrackId = null;
            //bool? async = null;
            //string zuoraEntityId = null;
            //string idempotencyKey = null;
            //string acceptEncoding = null;
            //string contentEncoding = null;
            //var response = instance.CancelPaymentScheduleItem(paymentScheduleItemId, fields, paymentScheduleFields, expand, filter, pageSize, zuoraTrackId, async, zuoraEntityId, idempotencyKey, acceptEncoding, contentEncoding);
            //Assert.IsInstanceOf(typeof(PaymentScheduleItem), response, "response is PaymentScheduleItem");
        }
        
        /// <summary>
        /// Test CreatePaymentScheduleItem
        /// </summary>
        [Test]
        public void CreatePaymentScheduleItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PaymentScheduleItemCreateRequest paymentScheduleItemCreateRequest = null;
            //List<string> fields = null;
            //List<string> paymentScheduleFields = null;
            //List<string> expand = null;
            //List<string> filter = null;
            //int? pageSize = null;
            //string zuoraTrackId = null;
            //bool? async = null;
            //string zuoraEntityIds = null;
            //string idempotencyKey = null;
            //string acceptEncoding = null;
            //string contentEncoding = null;
            //var response = instance.CreatePaymentScheduleItem(paymentScheduleItemCreateRequest, fields, paymentScheduleFields, expand, filter, pageSize, zuoraTrackId, async, zuoraEntityIds, idempotencyKey, acceptEncoding, contentEncoding);
            //Assert.IsInstanceOf(typeof(PaymentScheduleItem), response, "response is PaymentScheduleItem");
        }
        
        /// <summary>
        /// Test GetPaymentScheduleItem
        /// </summary>
        [Test]
        public void GetPaymentScheduleItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string paymentScheduleItemId = null;
            //List<string> fields = null;
            //List<string> paymentScheduleFields = null;
            //List<string> expand = null;
            //List<string> filter = null;
            //int? pageSize = null;
            //string zuoraTrackId = null;
            //string zuoraEntityIds = null;
            //string idempotencyKey = null;
            //string acceptEncoding = null;
            //string contentEncoding = null;
            //var response = instance.GetPaymentScheduleItem(paymentScheduleItemId, fields, paymentScheduleFields, expand, filter, pageSize, zuoraTrackId, zuoraEntityIds, idempotencyKey, acceptEncoding, contentEncoding);
            //Assert.IsInstanceOf(typeof(PaymentScheduleItem), response, "response is PaymentScheduleItem");
        }
        
        /// <summary>
        /// Test RetryPaymentScheduleItem
        /// </summary>
        [Test]
        public void RetryPaymentScheduleItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string paymentScheduleItemId = null;
            //PaymentScheduleItemRetry paymentScheduleItemRetry = null;
            //List<string> fields = null;
            //List<string> paymentScheduleFields = null;
            //List<string> expand = null;
            //List<string> filter = null;
            //int? pageSize = null;
            //string zuoraTrackId = null;
            //bool? async = null;
            //string zuoraEntityIds = null;
            //string idempotencyKey = null;
            //string acceptEncoding = null;
            //string contentEncoding = null;
            //var response = instance.RetryPaymentScheduleItem(paymentScheduleItemId, paymentScheduleItemRetry, fields, paymentScheduleFields, expand, filter, pageSize, zuoraTrackId, async, zuoraEntityIds, idempotencyKey, acceptEncoding, contentEncoding);
            //Assert.IsInstanceOf(typeof(PaymentScheduleItem), response, "response is PaymentScheduleItem");
        }
        
        /// <summary>
        /// Test SkipPaymentScheduleItem
        /// </summary>
        [Test]
        public void SkipPaymentScheduleItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string paymentScheduleItemId = null;
            //List<string> fields = null;
            //List<string> paymentScheduleFields = null;
            //List<string> expand = null;
            //List<string> filter = null;
            //int? pageSize = null;
            //string zuoraTrackId = null;
            //bool? async = null;
            //string zuoraEntityId = null;
            //string idempotencyKey = null;
            //string acceptEncoding = null;
            //string contentEncoding = null;
            //var response = instance.SkipPaymentScheduleItem(paymentScheduleItemId, fields, paymentScheduleFields, expand, filter, pageSize, zuoraTrackId, async, zuoraEntityId, idempotencyKey, acceptEncoding, contentEncoding);
            //Assert.IsInstanceOf(typeof(PaymentScheduleItem), response, "response is PaymentScheduleItem");
        }
        
        /// <summary>
        /// Test UpdatePaymentScheduleItem
        /// </summary>
        [Test]
        public void UpdatePaymentScheduleItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string paymentScheduleItemId = null;
            //PaymentScheduleItemPatch paymentScheduleItemPatch = null;
            //List<string> fields = null;
            //List<string> paymentScheduleFields = null;
            //List<string> expand = null;
            //List<string> filter = null;
            //int? pageSize = null;
            //string zuoraTrackId = null;
            //bool? async = null;
            //string zuoraEntityIds = null;
            //string idempotencyKey = null;
            //string acceptEncoding = null;
            //string contentEncoding = null;
            //var response = instance.UpdatePaymentScheduleItem(paymentScheduleItemId, paymentScheduleItemPatch, fields, paymentScheduleFields, expand, filter, pageSize, zuoraTrackId, async, zuoraEntityIds, idempotencyKey, acceptEncoding, contentEncoding);
            //Assert.IsInstanceOf(typeof(PaymentScheduleItem), response, "response is PaymentScheduleItem");
        }
        
    }

}
