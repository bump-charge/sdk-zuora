/*
 * Quickstart API Reference
 *
 * Zuora Quickstart API is recommended for new customers and integrators, allowing new integrators to swiftly integrate with Zuora. It supports essential business use cases.   To use the Quickstart API, you must have the following features enabled on your tenant:   * [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization)  * [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement)  To find the latest changes made to the Zuora Quickstart API, check the [Quickstart API Changelog](https://www.zuora.com/developer/quickstart-api/changelog/2022q4-changelog/).  We recommend that you subscribe to [Developers Community](https://community.zuora.com/communities/community-home?communitykey=e2a932b4-50c4-4019-a3e8-362e38714df3) to get notifications when a new version is released.  
 *
 * The version of the OpenAPI document: 2023-09-25
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Zuora.Client;
using Zuora.Api;
using Zuora.Model;

namespace Zuora.Test
{
    /// <summary>
    ///  Class for testing PaymentSchedulesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PaymentSchedulesApiTests
    {
        private PaymentSchedulesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PaymentSchedulesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PaymentSchedulesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' PaymentSchedulesApi
            //Assert.IsInstanceOf(typeof(PaymentSchedulesApi), instance);
        }

        
        /// <summary>
        /// Test CancelPaymentSchedule
        /// </summary>
        [Test]
        public void CancelPaymentScheduleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string paymentScheduleId = null;
            //PaymentScheduleCancel paymentScheduleCancel = null;
            //List<string> fields = null;
            //List<string> paymentScheduleItemFields = null;
            //List<string> expand = null;
            //List<string> filter = null;
            //int? pageSize = null;
            //string zuoraTrackId = null;
            //bool? async = null;
            //string zuoraEntityIds = null;
            //string idempotencyKey = null;
            //string acceptEncoding = null;
            //string contentEncoding = null;
            //var response = instance.CancelPaymentSchedule(paymentScheduleId, paymentScheduleCancel, fields, paymentScheduleItemFields, expand, filter, pageSize, zuoraTrackId, async, zuoraEntityIds, idempotencyKey, acceptEncoding, contentEncoding);
            //Assert.IsInstanceOf(typeof(PaymentSchedule), response, "response is PaymentSchedule");
        }
        
        /// <summary>
        /// Test CreatePaymentSchedule
        /// </summary>
        [Test]
        public void CreatePaymentScheduleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PaymentScheduleCreateRequest paymentScheduleCreateRequest = null;
            //List<string> fields = null;
            //List<string> paymentScheduleItemFields = null;
            //List<string> expand = null;
            //List<string> filter = null;
            //int? pageSize = null;
            //string zuoraTrackId = null;
            //bool? async = null;
            //string zuoraEntityIds = null;
            //string idempotencyKey = null;
            //string acceptEncoding = null;
            //string contentEncoding = null;
            //var response = instance.CreatePaymentSchedule(paymentScheduleCreateRequest, fields, paymentScheduleItemFields, expand, filter, pageSize, zuoraTrackId, async, zuoraEntityIds, idempotencyKey, acceptEncoding, contentEncoding);
            //Assert.IsInstanceOf(typeof(PaymentSchedule), response, "response is PaymentSchedule");
        }
        
        /// <summary>
        /// Test GetPaymentSchedule
        /// </summary>
        [Test]
        public void GetPaymentScheduleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string paymentScheduleId = null;
            //List<string> fields = null;
            //List<string> paymentScheduleItemFields = null;
            //List<string> expand = null;
            //List<string> filter = null;
            //int? pageSize = null;
            //string zuoraTrackId = null;
            //string zuoraEntityIds = null;
            //string idempotencyKey = null;
            //string acceptEncoding = null;
            //string contentEncoding = null;
            //var response = instance.GetPaymentSchedule(paymentScheduleId, fields, paymentScheduleItemFields, expand, filter, pageSize, zuoraTrackId, zuoraEntityIds, idempotencyKey, acceptEncoding, contentEncoding);
            //Assert.IsInstanceOf(typeof(PaymentSchedule), response, "response is PaymentSchedule");
        }
        
        /// <summary>
        /// Test UpdatePaymentSchedule
        /// </summary>
        [Test]
        public void UpdatePaymentScheduleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string paymentScheduleId = null;
            //PaymentSchedulePatchRequest paymentSchedulePatchRequest = null;
            //List<string> fields = null;
            //List<string> paymentScheduleItemFields = null;
            //List<string> expand = null;
            //List<string> filter = null;
            //int? pageSize = null;
            //string zuoraTrackId = null;
            //bool? async = null;
            //string zuoraEntityIds = null;
            //string idempotencyKey = null;
            //string acceptEncoding = null;
            //string contentEncoding = null;
            //var response = instance.UpdatePaymentSchedule(paymentScheduleId, paymentSchedulePatchRequest, fields, paymentScheduleItemFields, expand, filter, pageSize, zuoraTrackId, async, zuoraEntityIds, idempotencyKey, acceptEncoding, contentEncoding);
            //Assert.IsInstanceOf(typeof(PaymentSchedule), response, "response is PaymentSchedule");
        }
        
    }

}
