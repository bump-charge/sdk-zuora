/*
 * Quickstart API Reference
 *
 * Zuora Quickstart API is recommended for new customers and integrators, allowing new integrators to swiftly integrate with Zuora. It supports essential business use cases.   To use the Quickstart API, you must have the following features enabled on your tenant:   * [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization)  * [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement)  To find the latest changes made to the Zuora Quickstart API, check the [Quickstart API Changelog](https://www.zuora.com/developer/quickstart-api/changelog/2022q4-changelog/).  We recommend that you subscribe to [Developers Community](https://community.zuora.com/communities/community-home?communitykey=e2a932b4-50c4-4019-a3e8-362e38714df3) to get notifications when a new version is released.  
 *
 * The version of the OpenAPI document: 2023-09-25
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Zuora.Client;
using Zuora.Api;
using Zuora.Model;

namespace Zuora.Test
{
    /// <summary>
    ///  Class for testing CreditMemosApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CreditMemosApiTests
    {
        private CreditMemosApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CreditMemosApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CreditMemosApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' CreditMemosApi
            //Assert.IsInstanceOf(typeof(CreditMemosApi), instance);
        }

        
        /// <summary>
        /// Test ApplyCreditMemo
        /// </summary>
        [Test]
        public void ApplyCreditMemoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string creditMemoId = null;
            //ApplyUnapplyCreditMemo applyUnapplyCreditMemo = null;
            //List<string> fields = null;
            //List<string> appliedToFields = null;
            //List<string> creditMemoItemsFields = null;
            //List<string> taxationItemsFields = null;
            //List<string> accountFields = null;
            //List<string> billToFields = null;
            //List<string> expand = null;
            //List<string> filter = null;
            //int? pageSize = null;
            //string zuoraTrackId = null;
            //bool? async = null;
            //string zuoraEntityIds = null;
            //string idempotencyKey = null;
            //string acceptEncoding = null;
            //string contentEncoding = null;
            //var response = instance.ApplyCreditMemo(creditMemoId, applyUnapplyCreditMemo, fields, appliedToFields, creditMemoItemsFields, taxationItemsFields, accountFields, billToFields, expand, filter, pageSize, zuoraTrackId, async, zuoraEntityIds, idempotencyKey, acceptEncoding, contentEncoding);
            //Assert.IsInstanceOf(typeof(CreditMemo), response, "response is CreditMemo");
        }
        
        /// <summary>
        /// Test CancelCreditMemo
        /// </summary>
        [Test]
        public void CancelCreditMemoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string creditMemoId = null;
            //List<string> fields = null;
            //List<string> appliedToFields = null;
            //List<string> creditMemoItemsFields = null;
            //List<string> taxationItemsFields = null;
            //List<string> accountFields = null;
            //List<string> billToFields = null;
            //List<string> expand = null;
            //List<string> filter = null;
            //int? pageSize = null;
            //string zuoraTrackId = null;
            //bool? async = null;
            //string zuoraEntityId = null;
            //string idempotencyKey = null;
            //string acceptEncoding = null;
            //string contentEncoding = null;
            //var response = instance.CancelCreditMemo(creditMemoId, fields, appliedToFields, creditMemoItemsFields, taxationItemsFields, accountFields, billToFields, expand, filter, pageSize, zuoraTrackId, async, zuoraEntityId, idempotencyKey, acceptEncoding, contentEncoding);
            //Assert.IsInstanceOf(typeof(CreditMemo), response, "response is CreditMemo");
        }
        
        /// <summary>
        /// Test CreateCreditMemo
        /// </summary>
        [Test]
        public void CreateCreditMemoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreditMemoCreateRequest creditMemoCreateRequest = null;
            //List<string> fields = null;
            //List<string> appliedToFields = null;
            //List<string> creditMemoItemsFields = null;
            //List<string> taxationItemsFields = null;
            //List<string> accountFields = null;
            //List<string> billToFields = null;
            //List<string> expand = null;
            //List<string> filter = null;
            //int? pageSize = null;
            //string zuoraTrackId = null;
            //bool? async = null;
            //string zuoraEntityIds = null;
            //string idempotencyKey = null;
            //string acceptEncoding = null;
            //string contentEncoding = null;
            //var response = instance.CreateCreditMemo(creditMemoCreateRequest, fields, appliedToFields, creditMemoItemsFields, taxationItemsFields, accountFields, billToFields, expand, filter, pageSize, zuoraTrackId, async, zuoraEntityIds, idempotencyKey, acceptEncoding, contentEncoding);
            //Assert.IsInstanceOf(typeof(CreditMemo), response, "response is CreditMemo");
        }
        
        /// <summary>
        /// Test DeleteCreditMemo
        /// </summary>
        [Test]
        public void DeleteCreditMemoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string creditMemoId = null;
            //string zuoraTrackId = null;
            //bool? async = null;
            //string zuoraEntityIds = null;
            //string idempotencyKey = null;
            //string acceptEncoding = null;
            //string contentEncoding = null;
            //instance.DeleteCreditMemo(creditMemoId, zuoraTrackId, async, zuoraEntityIds, idempotencyKey, acceptEncoding, contentEncoding);
            
        }
        
        /// <summary>
        /// Test GetCreditMemo
        /// </summary>
        [Test]
        public void GetCreditMemoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string creditMemoId = null;
            //List<string> fields = null;
            //List<string> appliedToFields = null;
            //List<string> creditMemoItemsFields = null;
            //List<string> taxationItemsFields = null;
            //List<string> accountFields = null;
            //List<string> billToFields = null;
            //List<string> expand = null;
            //List<string> filter = null;
            //int? pageSize = null;
            //string zuoraTrackId = null;
            //string zuoraEntityIds = null;
            //string idempotencyKey = null;
            //string acceptEncoding = null;
            //string contentEncoding = null;
            //var response = instance.GetCreditMemo(creditMemoId, fields, appliedToFields, creditMemoItemsFields, taxationItemsFields, accountFields, billToFields, expand, filter, pageSize, zuoraTrackId, zuoraEntityIds, idempotencyKey, acceptEncoding, contentEncoding);
            //Assert.IsInstanceOf(typeof(CreditMemo), response, "response is CreditMemo");
        }
        
        /// <summary>
        /// Test GetCreditMemoItems
        /// </summary>
        [Test]
        public void GetCreditMemoItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string cursor = null;
            //List<string> expand = null;
            //List<string> filter = null;
            //List<string> sort = null;
            //int? pageSize = null;
            //List<string> fields = null;
            //List<string> taxationItemsFields = null;
            //string zuoraTrackId = null;
            //string zuoraEntityIds = null;
            //string idempotencyKey = null;
            //string acceptEncoding = null;
            //string contentEncoding = null;
            //var response = instance.GetCreditMemoItems(cursor, expand, filter, sort, pageSize, fields, taxationItemsFields, zuoraTrackId, zuoraEntityIds, idempotencyKey, acceptEncoding, contentEncoding);
            //Assert.IsInstanceOf(typeof(CreditMemoItemListResponse), response, "response is CreditMemoItemListResponse");
        }
        
        /// <summary>
        /// Test GetCreditMemos
        /// </summary>
        [Test]
        public void GetCreditMemosTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string cursor = null;
            //List<string> expand = null;
            //List<string> filter = null;
            //List<string> sort = null;
            //int? pageSize = null;
            //List<string> fields = null;
            //List<string> appliedToFields = null;
            //List<string> creditMemoItemsFields = null;
            //List<string> taxationItemsFields = null;
            //List<string> accountFields = null;
            //List<string> billToFields = null;
            //string zuoraTrackId = null;
            //string zuoraEntityIds = null;
            //string idempotencyKey = null;
            //string acceptEncoding = null;
            //string contentEncoding = null;
            //var response = instance.GetCreditMemos(cursor, expand, filter, sort, pageSize, fields, appliedToFields, creditMemoItemsFields, taxationItemsFields, accountFields, billToFields, zuoraTrackId, zuoraEntityIds, idempotencyKey, acceptEncoding, contentEncoding);
            //Assert.IsInstanceOf(typeof(CreditMemoListResponse), response, "response is CreditMemoListResponse");
        }
        
        /// <summary>
        /// Test PatchCreditMemo
        /// </summary>
        [Test]
        public void PatchCreditMemoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string creditMemoId = null;
            //CreditMemoPatchRequest creditMemoPatchRequest = null;
            //List<string> fields = null;
            //List<string> appliedToFields = null;
            //List<string> creditMemoItemsFields = null;
            //List<string> taxationItemsFields = null;
            //List<string> accountFields = null;
            //List<string> billToFields = null;
            //List<string> expand = null;
            //List<string> filter = null;
            //int? pageSize = null;
            //string zuoraTrackId = null;
            //bool? async = null;
            //string zuoraEntityIds = null;
            //string idempotencyKey = null;
            //string acceptEncoding = null;
            //string contentEncoding = null;
            //var response = instance.PatchCreditMemo(creditMemoId, creditMemoPatchRequest, fields, appliedToFields, creditMemoItemsFields, taxationItemsFields, accountFields, billToFields, expand, filter, pageSize, zuoraTrackId, async, zuoraEntityIds, idempotencyKey, acceptEncoding, contentEncoding);
            //Assert.IsInstanceOf(typeof(CreditMemo), response, "response is CreditMemo");
        }
        
        /// <summary>
        /// Test PostCreditMemo
        /// </summary>
        [Test]
        public void PostCreditMemoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string creditMemoId = null;
            //List<string> fields = null;
            //List<string> appliedToFields = null;
            //List<string> creditMemoItemsFields = null;
            //List<string> taxationItemsFields = null;
            //List<string> accountFields = null;
            //List<string> billToFields = null;
            //List<string> expand = null;
            //List<string> filter = null;
            //int? pageSize = null;
            //string zuoraTrackId = null;
            //bool? async = null;
            //string zuoraEntityId = null;
            //string idempotencyKey = null;
            //string acceptEncoding = null;
            //string contentEncoding = null;
            //var response = instance.PostCreditMemo(creditMemoId, fields, appliedToFields, creditMemoItemsFields, taxationItemsFields, accountFields, billToFields, expand, filter, pageSize, zuoraTrackId, async, zuoraEntityId, idempotencyKey, acceptEncoding, contentEncoding);
            //Assert.IsInstanceOf(typeof(CreditMemo), response, "response is CreditMemo");
        }
        
        /// <summary>
        /// Test UnapplyCreditMemo
        /// </summary>
        [Test]
        public void UnapplyCreditMemoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string creditMemoId = null;
            //ApplyUnapplyCreditMemo applyUnapplyCreditMemo = null;
            //List<string> fields = null;
            //List<string> appliedToFields = null;
            //List<string> creditMemoItemsFields = null;
            //List<string> taxationItemsFields = null;
            //List<string> accountFields = null;
            //List<string> billToFields = null;
            //List<string> expand = null;
            //List<string> filter = null;
            //int? pageSize = null;
            //string zuoraTrackId = null;
            //bool? async = null;
            //string zuoraEntityIds = null;
            //string idempotencyKey = null;
            //string acceptEncoding = null;
            //string contentEncoding = null;
            //var response = instance.UnapplyCreditMemo(creditMemoId, applyUnapplyCreditMemo, fields, appliedToFields, creditMemoItemsFields, taxationItemsFields, accountFields, billToFields, expand, filter, pageSize, zuoraTrackId, async, zuoraEntityIds, idempotencyKey, acceptEncoding, contentEncoding);
            //Assert.IsInstanceOf(typeof(CreditMemo), response, "response is CreditMemo");
        }
        
        /// <summary>
        /// Test UnpostCreditMemo
        /// </summary>
        [Test]
        public void UnpostCreditMemoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string creditMemoId = null;
            //List<string> fields = null;
            //List<string> appliedToFields = null;
            //List<string> creditMemoItemsFields = null;
            //List<string> taxationItemsFields = null;
            //List<string> accountFields = null;
            //List<string> billToFields = null;
            //List<string> expand = null;
            //List<string> filter = null;
            //int? pageSize = null;
            //string zuoraTrackId = null;
            //bool? async = null;
            //string zuoraEntityId = null;
            //string idempotencyKey = null;
            //string acceptEncoding = null;
            //string contentEncoding = null;
            //var response = instance.UnpostCreditMemo(creditMemoId, fields, appliedToFields, creditMemoItemsFields, taxationItemsFields, accountFields, billToFields, expand, filter, pageSize, zuoraTrackId, async, zuoraEntityId, idempotencyKey, acceptEncoding, contentEncoding);
            //Assert.IsInstanceOf(typeof(CreditMemo), response, "response is CreditMemo");
        }
        
    }

}
