/*
 * Quickstart API Reference
 *
 * Zuora Quickstart API is recommended for new customers and integrators, allowing new integrators to swiftly integrate with Zuora. It supports essential business use cases.   To use the Quickstart API, you must have the following features enabled on your tenant:   * [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization)  * [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement)  To find the latest changes made to the Zuora Quickstart API, check the [Quickstart API Changelog](https://www.zuora.com/developer/quickstart-api/changelog/2022q4-changelog/).  We recommend that you subscribe to [Developers Community](https://community.zuora.com/communities/community-home?communitykey=e2a932b4-50c4-4019-a3e8-362e38714df3) to get notifications when a new version is released.  
 *
 * The version of the OpenAPI document: 2023-09-25
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Zuora.Api;
using Zuora.Model;
using Zuora.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Zuora.Test
{
    /// <summary>
    ///  Class for testing SubscriptionPreviewBillingDocumentItemResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SubscriptionPreviewBillingDocumentItemResponseTests
    {
        // TODO uncomment below to declare an instance variable for SubscriptionPreviewBillingDocumentItemResponse
        //private SubscriptionPreviewBillingDocumentItemResponse instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of SubscriptionPreviewBillingDocumentItemResponse
            //instance = new SubscriptionPreviewBillingDocumentItemResponse();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SubscriptionPreviewBillingDocumentItemResponse
        /// </summary>
        [Test]
        public void SubscriptionPreviewBillingDocumentItemResponseInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" SubscriptionPreviewBillingDocumentItemResponse
            //Assert.IsInstanceOf(typeof(SubscriptionPreviewBillingDocumentItemResponse), instance);
        }


        /// <summary>
        /// Test the property 'subscription_item_description'
        /// </summary>
        [Test]
        public void subscription_item_descriptionTest()
        {
            // TODO unit test for the property 'subscription_item_description'
        }
        /// <summary>
        /// Test the property 'subscription_item_name'
        /// </summary>
        [Test]
        public void subscription_item_nameTest()
        {
            // TODO unit test for the property 'subscription_item_name'
        }
        /// <summary>
        /// Test the property 'subscription_item_number'
        /// </summary>
        [Test]
        public void subscription_item_numberTest()
        {
            // TODO unit test for the property 'subscription_item_number'
        }
        /// <summary>
        /// Test the property 'processing_type'
        /// </summary>
        [Test]
        public void processing_typeTest()
        {
            // TODO unit test for the property 'processing_type'
        }
        /// <summary>
        /// Test the property 'product_name'
        /// </summary>
        [Test]
        public void product_nameTest()
        {
            // TODO unit test for the property 'product_name'
        }
        /// <summary>
        /// Test the property 'price_id'
        /// </summary>
        [Test]
        public void price_idTest()
        {
            // TODO unit test for the property 'price_id'
        }
        /// <summary>
        /// Test the property 'service_end_date'
        /// </summary>
        [Test]
        public void service_end_dateTest()
        {
            // TODO unit test for the property 'service_end_date'
        }
        /// <summary>
        /// Test the property 'service_start_date'
        /// </summary>
        [Test]
        public void service_start_dateTest()
        {
            // TODO unit test for the property 'service_start_date'
        }
        /// <summary>
        /// Test the property 'tax'
        /// </summary>
        [Test]
        public void taxTest()
        {
            // TODO unit test for the property 'tax'
        }
        /// <summary>
        /// Test the property 'quantity'
        /// </summary>
        [Test]
        public void quantityTest()
        {
            // TODO unit test for the property 'quantity'
        }
        /// <summary>
        /// Test the property 'unit_of_measure'
        /// </summary>
        [Test]
        public void unit_of_measureTest()
        {
            // TODO unit test for the property 'unit_of_measure'
        }
        /// <summary>
        /// Test the property 'subtotal'
        /// </summary>
        [Test]
        public void subtotalTest()
        {
            // TODO unit test for the property 'subtotal'
        }
        /// <summary>
        /// Test the property 'total'
        /// </summary>
        [Test]
        public void totalTest()
        {
            // TODO unit test for the property 'total'
        }
        /// <summary>
        /// Test the property 'taxation_items'
        /// </summary>
        [Test]
        public void taxation_itemsTest()
        {
            // TODO unit test for the property 'taxation_items'
        }

    }

}
