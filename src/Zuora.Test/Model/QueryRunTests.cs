/*
 * Quickstart API Reference
 *
 * Zuora Quickstart API is recommended for new customers and integrators, allowing new integrators to swiftly integrate with Zuora. It supports essential business use cases.   To use the Quickstart API, you must have the following features enabled on your tenant:   * [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization)  * [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement)  To find the latest changes made to the Zuora Quickstart API, check the [Quickstart API Changelog](https://www.zuora.com/developer/quickstart-api/changelog/2022q4-changelog/).  We recommend that you subscribe to [Developers Community](https://community.zuora.com/communities/community-home?communitykey=e2a932b4-50c4-4019-a3e8-362e38714df3) to get notifications when a new version is released.  
 *
 * The version of the OpenAPI document: 2023-09-25
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Zuora.Api;
using Zuora.Model;
using Zuora.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Zuora.Test
{
    /// <summary>
    ///  Class for testing QueryRun
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class QueryRunTests
    {
        // TODO uncomment below to declare an instance variable for QueryRun
        //private QueryRun instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of QueryRun
            //instance = new QueryRun();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of QueryRun
        /// </summary>
        [Test]
        public void QueryRunInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" QueryRun
            //Assert.IsInstanceOf(typeof(QueryRun), instance);
        }


        /// <summary>
        /// Test the property 'created_by_id'
        /// </summary>
        [Test]
        public void created_by_idTest()
        {
            // TODO unit test for the property 'created_by_id'
        }
        /// <summary>
        /// Test the property 'id'
        /// </summary>
        [Test]
        public void idTest()
        {
            // TODO unit test for the property 'id'
        }
        /// <summary>
        /// Test the property 'sql'
        /// </summary>
        [Test]
        public void sqlTest()
        {
            // TODO unit test for the property 'sql'
        }
        /// <summary>
        /// Test the property 'remaining_attempts'
        /// </summary>
        [Test]
        public void remaining_attemptsTest()
        {
            // TODO unit test for the property 'remaining_attempts'
        }
        /// <summary>
        /// Test the property 'updated_time'
        /// </summary>
        [Test]
        public void updated_timeTest()
        {
            // TODO unit test for the property 'updated_time'
        }
        /// <summary>
        /// Test the property 'file'
        /// </summary>
        [Test]
        public void fileTest()
        {
            // TODO unit test for the property 'file'
        }
        /// <summary>
        /// Test the property 'number_of_rows'
        /// </summary>
        [Test]
        public void number_of_rowsTest()
        {
            // TODO unit test for the property 'number_of_rows'
        }
        /// <summary>
        /// Test the property 'processing_duration'
        /// </summary>
        [Test]
        public void processing_durationTest()
        {
            // TODO unit test for the property 'processing_duration'
        }
        /// <summary>
        /// Test the property 'state'
        /// </summary>
        [Test]
        public void stateTest()
        {
            // TODO unit test for the property 'state'
        }
        /// <summary>
        /// Test the property 'column_separator'
        /// </summary>
        [Test]
        public void column_separatorTest()
        {
            // TODO unit test for the property 'column_separator'
        }

    }

}
